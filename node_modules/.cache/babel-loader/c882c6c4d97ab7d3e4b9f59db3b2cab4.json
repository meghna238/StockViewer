{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\stock_viewer\\\\src\\\\components\\\\Company-list.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../Firebase';\nimport ReactApexChart from 'react-apexcharts';\nimport swal from 'sweetalert';\nimport '../App.css';\nimport './Company-list.css';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../service';\nimport history from '../History';\nimport { Image, Row } from 'react-bootstrap';\nimport logo from './logo.png';\nimport checked from './checked.png';\nconst options = {\n  chart: {\n    stacked: false,\n    zoom: {\n      type: 'x',\n      enabled: true\n    },\n    toolbar: {\n      autoSelected: 'zoom'\n    }\n  },\n  plotOptions: {\n    line: {\n      curve: 'smooth'\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  markers: {\n    size: 0,\n    style: 'full'\n  },\n  colors: ['#ff4d4d'],\n  opacity: 0.4,\n  title: {\n    text: 'Stock Price Movement',\n    align: 'left'\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      inverseColors: false,\n      opacityFrom: 0.5,\n      opacityTo: 0,\n      stops: [0, 90, 100]\n    }\n  },\n  yaxis: {\n    min: 0,\n    max: 250000,\n    labels: {\n      formatter: function (val) {\n        return val.toFixed(0);\n      }\n    },\n    title: {\n      text: 'Price'\n    }\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  tooltip: {\n    shared: false,\n    y: {\n      formatter: function (val) {\n        return (val / 1000).toFixed(0);\n      }\n    }\n  }\n};\nconst ranges = [{\n  value: '1min',\n  label: '1 min'\n}, {\n  value: '5min',\n  label: '5 mins'\n}, {\n  value: '15min',\n  label: '15 mins'\n}, {\n  value: '30min',\n  label: '30 mins'\n}, {\n  value: '60min',\n  label: '1 hour'\n}];\nconst indicatorList = [{\n  value: 'SMA',\n  label: 'simple moving average (SMA)'\n}, {\n  value: 'EMA',\n  label: ' Exponential moving average (EMA) '\n}, {\n  value: 'MACD',\n  label: 'Moving average convergence / divergence (MACD)'\n}, {\n  value: 'MACDEXT',\n  label: 'Moving average convergence / divergence'\n}, {\n  value: 'APO',\n  label: 'Absolute price oscillator (APO)'\n}, {\n  value: 'RSI',\n  label: 'Relative strength index (RSI)'\n}, {\n  value: 'ROC',\n  label: ' Rate of change(ROC)'\n}, {\n  value: 'ROCR',\n  label: 'Rate of change ratio (ROCR)'\n}, {\n  value: 'ADX',\n  label: 'Average directional movement index (ADX) '\n}, {\n  value: 'AROONOSC',\n  label: ' Aroon oscillator (AROONOSC)'\n}, {\n  value: 'TRIX',\n  label: 'Triple smooth exponential moving average (TRIX)'\n}, {\n  value: 'OBV',\n  label: 'On balance volume (OBV) '\n}];\n\nclass Companylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIfalreadyAddOrNot = companyName => {\n      this.state.isSearchClick = false;\n      this.state.isOpenCompanyList = false;\n      console.log('getcompany:');\n      localStorage.getItem('email1');\n      const email = localStorage.email1;\n      console.log(companyName);\n      let companyData = [];\n      /** it's check selected company already added into database or not */\n\n      firebase.firestore().collection(\"company\").where(\"name\", \"==\", companyName).where(\"email\", \"==\", email).get().then(function (querySnapshot) {\n        console.log(\"querySnapshot\", querySnapshot);\n        querySnapshot.forEach(function (doc) {\n          const _doc$data = doc.data(),\n                name = _doc$data.name,\n                email = _doc$data.email;\n\n          console.log(\"data:\", doc.data());\n          companyData.push({\n            key: doc.id,\n            doc,\n            name,\n            email\n          });\n        });\n        console.log(\"data1:\", companyData.length);\n\n        if (companyData.length) {\n          console.log('found data', companyData);\n          swal(\"Already added!\", \"\", \"info\").then(willDelete => {\n            if (willDelete) {\n              window.location.reload();\n            }\n          }).catch(err => {\n            console.log(\"hey error:\", err);\n            swal('Internal Server Error');\n          });\n        } else {\n          console.log(\"new company\");\n          addCompanyToDatabase();\n        }\n      }).catch(err => {\n        swal('Internal Server Error');\n      });\n      /** Add comapny to database */\n\n      const addCompanyToDatabase = () => {\n        localStorage.getItem('email1');\n        let email = localStorage.email1;\n        console.log(\"isLoaded before:\", this.state.isLoaded);\n        this.ref.add({\n          symbol: this.state.companySymbol,\n          name: this.state.companyName,\n          email: email,\n          buttons: {\n            cancel: true,\n            cancelButtonText: \"X\"\n          }\n        }).then(docRef => {\n          window.location.reload();\n        }).catch(error => {\n          swal('Internal Server Error');\n        });\n      };\n    };\n\n    this.selectInterval = prop => event => {\n      this.state.isSelectHistorical = false;\n      let intervalApiData = [];\n      this.state.intervalArray = [];\n      this.state.isComparedCompany = false;\n      const intervalData = {\n        symbol: prop,\n        intervalValue: event.target.value\n      };\n      API.selectInterval(intervalData).then(res => {\n        try {\n          this.setState({\n            isIntervalValue: true,\n            isSelectinterval: true,\n            isSelectHistorical: false,\n            isComparedCompany: false,\n            selectedInterval: prop,\n            graphData: [],\n            isLoaded: true\n          });\n          let originalObject = res['Time Series (' + event.target.value + ')'];\n          console.log('originalObject: ', originalObject);\n          console.log(\"interval array======second time===>\", this.state.intervalArray);\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              intervalApiData.push({\n                date: key,\n                open: originalObject[key]['1. open'],\n                high: originalObject[key]['2. high'],\n                low: originalObject[key]['3. low'],\n                close: originalObject[key]['4. close'],\n                volume: originalObject[key]['5. volume']\n              });\n            }\n\n            this.setState({\n              intervalArray: intervalApiData,\n              isIntervalValue: true\n            });\n            this.displayGraphOfInterval();\n          } else {\n            setTimeout(this.setState({\n              isLoaded: true\n            }), 3000);\n            swal('Internal Server Error');\n          }\n        } catch (err) {\n          console.log(\"err====\", err);\n          swal('Internal Server Error');\n        }\n      }).catch(err => {\n        swal('Internal Server Error');\n      });\n    };\n\n    this.selectComparisonCompany = prop => event => {\n      this.state.isComparedCompany = true;\n      this.state.isSelectHistorical = false;\n      this.state.isSelectinterval = false;\n      this.state.isIndicatorGraph = false;\n      this.state.isIntervalValue = false;\n      const companySymbol = event.target.value;\n      API.selectComparisonCompany(companySymbol).then(res => {\n        try {\n          this.setState({\n            isComparedCompany: true,\n            firstCompany: prop,\n            isIndicatorGraph: false,\n            selectedCompany: event.target.value\n          });\n          const originalObject = res['Time Series (5min)'];\n          console.log(\"res==========>\", originalObject);\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              this.state.firstSelectedCompanyArray.push({\n                date: key,\n                open: originalObject[key]['1. open'],\n                high: originalObject[key]['2. high'],\n                low: originalObject[key]['3. low'],\n                close: originalObject[key]['4. close'],\n                volume: originalObject[key]['5. volume']\n              });\n            }\n\n            console.log(\"comparison Array1=======>\", this.state.firstSelectedCompanyArray);\n            this.comparedCompanyData();\n          } else {\n            setTimeout(this.setState({\n              isLoaded: true\n            }), 3000);\n            swal('Internal Server Error');\n          }\n        } catch (err) {\n          console.log(\"err:\", err);\n          swal('Internal Server Error');\n        }\n      }).catch(err => {\n        swal('Internal Server Error');\n      });\n      console.log(\"this.state.isComparedCompany:\", this.state.isComparedCompany);\n    };\n\n    this.comparedCompanyData = () => {\n      let selectedCompany = [];\n      let firstSelectedCompany = this.state.firstCompany;\n      API.selectComparisonCompany(firstSelectedCompany).then(res => {\n        try {\n          console.log(\"res============>\", res);\n\n          if (res.Note == 'Thank you for using Alpha Vantage! Our standard AP…would like to target a higher API call frequency.') {\n            alert('wait 1 minute');\n          } else {\n            const originalObjectforDisplay = res['Time Series (5min)'];\n            console.log(\"originalObject===========>\", originalObjectforDisplay);\n\n            if (originalObjectforDisplay) {\n              for (let key in originalObjectforDisplay) {\n                selectedCompany.push({\n                  date: key,\n                  open: originalObjectforDisplay[key]['1. open'],\n                  high: originalObjectforDisplay[key]['2. high'],\n                  low: originalObjectforDisplay[key]['3. low'],\n                  close: originalObjectforDisplay[key]['4. close'],\n                  volume: originalObjectforDisplay[key]['5. volume']\n                });\n              }\n\n              this.setState({\n                secondSelectedCompanyArray: selectedCompany\n              });\n              console.log(\"comparison Array2=======>\", this.state.secondSelectedCompanyArray);\n            } else {\n              swal('Internal Server Error');\n            }\n          }\n          /**selecte other company then call below function */\n\n\n          if (this.state.secondSelectedCompanyArray.length && this.state.firstSelectedCompanyArray.length) {\n            this.displayGraphOfComparison();\n          }\n        } catch (err) {\n          swal('Internal Server Error');\n        }\n      });\n    };\n\n    this.getSelectedIndicatorData = prop => event => {\n      console.log(\"event:\", event.target.value);\n      console.log(\"prop:\", prop);\n      const indicatorData = {\n        selectedCompanySymbol: prop,\n        indicatorValue: event.target.value\n      };\n      API.getSelectedIndicatorData(indicatorData).then(res => {\n        try {\n          this.setState({\n            indicatorGraphData: [],\n            indicatorDataArray: [],\n            isIndicatorGraph: true,\n            isIntervalValue: false,\n            isSelectHistorical: false,\n            isComparedCompany: false\n          });\n          const originalObject = res['Technical Analysis: ' + [event.target.value]];\n          console.log(\"result:\", ['Technical Analysis: ' + [event.target.value]]);\n          console.log(\"originalObject:\", originalObject);\n          console.log(\"isIndicatorGraph:\", this.state.isIndicatorGraph);\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              this.state.indicatorDataArray.push({\n                date: key,\n                indicatorObj: originalObject[key][event.target.value]\n              });\n            }\n          } else {\n            swal('Internal Server Error');\n          }\n\n          console.log(\"indicatorDataArray:\", this.state.indicatorDataArray);\n          this.displayGraphOfIndicator();\n        } catch (err) {\n          swal('Internal Server Error');\n        }\n      }).catch(err => {\n        console.log('hey error: ', err);\n      });\n    };\n\n    this.logOut = () => {\n      firebase.auth().signOut().then(function () {\n        console.log('Signed Out');\n        localStorage.clear();\n        localStorage.removeItem('email1');\n        console.log(localStorage);\n        history.push('/');\n      }, function (error) {\n        swal('Internal Server Error');\n      });\n    };\n\n    this.ref = firebase.firestore().collection('company');\n    this.unsubscribe = null;\n    this.state = {\n      user: [],\n      array: [],\n      searchResponse: [],\n      results: [],\n      companyData: [],\n      query: '',\n      value: '',\n      searchValue: '',\n      companySymbol: '',\n      companyName: '',\n      symbol: '',\n      name: '',\n      userEmail: '',\n      grapharray: [],\n      date: \"\",\n      open: '',\n      close: '',\n      high: '',\n      low: '',\n      volume: '',\n      indicatorObj: '',\n      historicalArray: [],\n      intervalArray: [],\n      graphData: [],\n      intervalData: [],\n      firstSelectedCompanyArray: [],\n      secondSelectedCompanyArray: [],\n      indicatorDataArray: [],\n      indicatorGraphData: [],\n      comparisonOfVolume: [],\n      historicalOpen: '',\n      historicalClose: '',\n      historicalHigh: '',\n      historicalLow: '',\n      historicalVolume: '',\n      historicalAdjClose: '',\n      values: '',\n      firstCompany: '',\n      selectedCompany: '',\n      selectedInterval: '',\n      intervalRange: '',\n      clickCompanyName: '',\n      clickCompanySymbol: '',\n      firstSelectedCompany: '',\n      isToggleOn: true,\n      setOpen: false,\n      modalOpen: false,\n      isLoaded: false,\n      isSearchClick: false,\n      isOpenSearch: false,\n      isOpenCompanyList: false,\n      isSelectinterval: false,\n      isGraphDisplay: false,\n      isSelectHistorical: false,\n      isIntervalValue: false,\n      isIndicatorGraph: false,\n      isComparedCompany: false,\n      checkAlreadyAddOrNot: false\n    };\n    this.addCompanytoWatchlist = this.addCompanytoWatchlist.bind(this);\n    this.getSearchValue = this.getSearchValue.bind(this);\n    this.submitSearchValue = this.submitSearchValue.bind(this);\n    this.getCompany = this.getCompany.bind(this);\n    this.displaySelectedCompanyGraph = this.displaySelectedCompanyGraph.bind(this);\n    this.openSearchbar = this.openSearchbar.bind(this);\n    this.displayCompanyList = this.displayCompanyList.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCompany(); // this.getDate();\n    // this.unsubscribe = this.ref.onSnapshot(this.getCompany);\n  }\n  /**\r\n      * @param {object} event get name or symbol of search company\r\n      */\n\n\n  getSearchValue(event) {\n    this.setState({\n      value: event.target.value,\n      searchValue: event.target.value\n    });\n  }\n  /**\r\n      * @param {object} event validation of search button \r\n      */\n\n\n  submitSearchValue(event) {\n    this.setState({\n      value: '',\n      isLoaded: false\n    });\n    /**validation for search input */\n\n    if (!this.state.value) {\n      swal(\"Please, Enter value\", \"\", \"info\");\n    } else {\n      console.log(\"name:\", this.state.value);\n      console.log(\"searchValue\", this.state.searchValue);\n      event.preventDefault();\n      this.getApiData();\n      this.setState({\n        value: ''\n      });\n    }\n  }\n  /**\r\n      * @param {object} data call add company function and get name and symbol of add company \r\n      */\n\n\n  addCompanytoWatchlist(data) {\n    console.log('data: ', data);\n    this.setState({\n      companySymbol: data['1. symbol'],\n      companyName: data['2. name']\n    });\n    this.getApiData();\n    this.addComapny();\n  }\n  /**\r\n   * @param {string} companySymbol wise display historical data table \r\n   */\n\n\n  displayHistoricalData(companySymbol) {\n    const historicalData = companySymbol;\n    console.log(\"historical data:\", historicalData);\n    console.log(\"symbol of selected company==============>\", companySymbol);\n    console.log(\"type:\", typeof companySymbol);\n    this.setState({\n      isSelectHistorical: true,\n      isSelectinterval: false,\n      historicalArray: [],\n      isComparedCompany: false\n    });\n    API.displayHistoricalData(historicalData).then(res => {\n      try {\n        const originalObject = res['Time Series (Daily)'];\n        console.log('originalObject: ', originalObject);\n\n        if (originalObject) {\n          for (let key in originalObject) {\n            this.state.historicalArray.push({\n              date: key,\n              open: originalObject[key]['1. open'],\n              high: originalObject[key]['2. high'],\n              low: originalObject[key]['3. low'],\n              close: originalObject[key]['4. close'],\n              adjclose: originalObject[key]['5. adjusted close'],\n              volume: originalObject[key]['6. volume']\n            });\n          }\n\n          console.log(\"historicalArray==========>\", this.state.historicalArray);\n          this.setState({\n            isSelectHistorical: true\n          });\n        } else {\n          swal('Internal Server Error');\n        }\n      } catch (err) {\n        swal('Internal Server Error');\n      }\n    }).catch(err => {\n      swal('Internal Server Error');\n    });\n  }\n  /** selected symbol to add in watchlist */\n\n\n  addComapny() {\n    if (this.state.companySymbol) {\n      console.log(\"addCompany2:\", this.state.companySymbol);\n      console.log(\"image==========>\", checked);\n      return swal({\n        title: this.state.companySymbol,\n        text: this.state.companyName,\n        icon: \"success\",\n        dangerMode: true,\n        buttons: {\n          cancel: true,\n          cancelButtonText: \"X\"\n        } // imageUrl: 'https://image.flaticon.com/icons/svg/19/19973.svg'\n\n      }) // swal({\n      //     title: this.state.companySymbol,\n      //     text: this.state.companyName,\n      //     imageUrl: 'checked.png',\n      //     imageHeight: 500,\n      //     animation: true,\n      //     showCloseButton: true,\n      //     showCancelButton: true\n      //   })\n      .then(willDelete => {\n        if (willDelete) {\n          this.checkIfalreadyAddOrNot(this.state.companyName);\n        }\n      });\n    }\n  }\n  /**\r\n   * @param {string} companyName already add or not \r\n   */\n\n\n  /** display graph of selected interval */\n  displayGraphOfInterval() {\n    const graphSeries = this.state.intervalArray;\n    let chartData = 1484418600000;\n    this.state.intervalData = [];\n\n    for (let i = 0; i < graphSeries.length; i++) {\n      chartData = chartData + 86400000;\n      let obj = JSON.parse(graphSeries[i].volume);\n      let innerArr = [chartData, obj];\n      this.state.intervalData.push(innerArr);\n    }\n\n    let series = [{\n      name: 'Stock price',\n      type: 'area',\n      data: this.state.intervalData\n    }];\n    /**display chart of selected interval */\n\n    let chartrender = React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      height: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, chartrender);\n  }\n  /** select company and call api of selected company */\n\n\n  /** display table of both company*/\n  displayGraphOfComparison() {\n    if (this.state.firstSelectedCompanyArray.length && this.state.secondSelectedCompanyArray.length) {\n      this.state.comparisonOfVolume = [];\n      console.log(\"length1:::\", this.state.firstSelectedCompanyArray.length);\n      console.log(\"length2:::\", this.state.secondSelectedCompanyArray.length);\n\n      if (this.state.firstSelectedCompanyArray.length > this.state.secondSelectedCompanyArray.length) {\n        for (let i = 0; i < this.state.secondSelectedCompanyArray.length; i++) {\n          console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\n          console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume);\n          this.state.comparisonOfVolume.push({\n            date: this.state.firstSelectedCompanyArray[i].date,\n            diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume,\n            first: this.state.secondSelectedCompanyArray[i].volume,\n            second: this.state.firstSelectedCompanyArray[i].volume\n          });\n        }\n      } else {\n        for (let i = 0; i < this.state.firstSelectedCompanyArray.length; i++) {\n          console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\n          console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume);\n          this.state.comparisonOfVolume.push({\n            date: this.state.firstSelectedCompanyArray[i].date,\n            diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume,\n            first: this.state.secondSelectedCompanyArray[i].volume,\n            second: this.state.firstSelectedCompanyArray[i].volume\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, \"Date\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, this.state.firstCompany), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, this.state.selectedCompany), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, \"Differnce\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, this.state.comparisonOfVolume.map(data => React.createElement(TableRow, {\n        key: data.diffrence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, data.date), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, data.first), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, data.second), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, data.diffrence)))))));\n    }\n  }\n  /** select indicator and call API of selcted indicator */\n\n\n  /** display graph of selected indicator */\n  displayGraphOfIndicator() {\n    console.log(\"indicator fun called\");\n    let graphSeries = this.state.indicatorDataArray;\n    console.log(\"length:\", graphSeries.length);\n    let chartData = 1484418600000;\n\n    for (let i = 0; i < graphSeries.length; i++) {\n      chartData = chartData + 86400000;\n      let obj = JSON.parse(graphSeries[i].indicatorObj);\n      let innerArr = [chartData, obj];\n      this.state.indicatorGraphData.push(innerArr);\n    }\n\n    console.log(\"graphData:\", this.state.indicatorGraphData);\n    let options = {\n      chart: {\n        stacked: false,\n        zoom: {\n          type: 'x',\n          enabled: true\n        },\n        toolbar: {\n          autoSelected: 'zoom'\n        }\n      },\n      plotOptions: {\n        line: {\n          curve: 'smooth'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      markers: {\n        size: 0,\n        style: 'full'\n      },\n      colors: ['#ff4d4d'],\n      opacity: 0.4,\n      title: {\n        text: 'Stock Price Movement',\n        align: 'left'\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          inverseColors: false,\n          opacityFrom: 0.5,\n          opacityTo: 0,\n          stops: [0, 90, 100]\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 250,\n        labels: {\n          formatter: function (val) {\n            return val.toFixed(0);\n          }\n        },\n        title: {\n          text: 'Price'\n        }\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      tooltip: {\n        shared: false,\n        y: {\n          formatter: function (val) {\n            return (val / 1000).toFixed(0);\n          }\n        }\n      }\n    };\n    let series = [{\n      name: 'Stock price',\n      data: this.state.indicatorGraphData\n    }];\n    /**display graph of selected indicator */\n\n    let chartrender = React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      width: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, chartrender);\n  }\n  /** display watchlist and graph or search list */\n\n\n  displayCompanyList() {\n    const date = this.state.date;\n    /** any company added into current user watchlist */\n\n    if (this.state.grapharray.length) {\n      let graphSeries = this.state.grapharray;\n      let chartData = 1484418600000;\n      let graphData = [];\n\n      for (let i = 0; i < graphSeries.length; i++) {\n        chartData = chartData + 86400000;\n        let obj = JSON.parse(graphSeries[i].volume);\n        let innerArr = [chartData, obj];\n        graphData.push(innerArr);\n      }\n\n      let series = [{\n        name: 'Stock price',\n        data: graphData\n      }];\n      /** display graph of selected company */\n\n      var chartrender = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, React.createElement(ReactApexChart, {\n        options: options,\n        series: series,\n        type: \"area\",\n        height: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chart_bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, \"Open: \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, this.state.open)), React.createElement(\"li\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, \"Close: \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, this.state.close)), React.createElement(\"li\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, \"High: \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, this.state.high)), React.createElement(\"li\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, \"Low: \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, this.state.low)), React.createElement(\"li\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, \"Volume: \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, this.state.volume))))));\n    }\n    /** it's display graph or serch response table */\n\n\n    let showGraphOrSearchResult = this.state.searchResponse.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }, \"Search Response....\")), this.state.searchResponse.map(data => React.createElement(List, {\n      key: data['1. symbol'],\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      className: \"search_list\",\n      primary: data['1. symbol'],\n      secondary: data['2. name'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      className: \"search_list1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"primary\",\n      edge: \"end\",\n      \"aria-label\": \"Delete\",\n      onClick: () => this.addCompanytoWatchlist(data),\n      className: \"addIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }))))))) : this.state.searchResponse ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"company_symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, this.state.clickCompanySymbol), React.createElement(\"p\", {\n      className: \"company_subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, this.state.clickCompanyName)), React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815\n      },\n      __self: this\n    }, this.state.isGraphDisplay ? React.createElement(\"div\", {\n      className: \"listItem1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      select: true,\n      style: {\n        margin: 10\n      },\n      value: this.state.values.intervalRange,\n      onChange: this.getSelectedIndicatorData(this.state.clickCompanySymbol),\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 824\n          },\n          __self: this\n        }, \"Indicator\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, indicatorList.map(indicator => React.createElement(MenuItem, {\n      key: indicator.value,\n      value: indicator.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827\n      },\n      __self: this\n    }, indicator.label)))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      select: true,\n      style: {\n        margin: 10\n      },\n      value: this.state.values.intervalRange,\n      onChange: this.selectComparisonCompany(this.state.clickCompanySymbol),\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838\n          },\n          __self: this\n        }, \"Comparison\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, this.state.companyData.map(company => React.createElement(MenuItem, {\n      key: company.symbol,\n      value: company.symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, company.symbol)))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      select: true,\n      style: {\n        margin: 10\n      },\n      value: this.state.values.intervalRange,\n      onChange: this.selectInterval(this.state.clickCompanySymbol),\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 852\n          },\n          __self: this\n        }, \"Interval\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }, ranges.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }, option.label)))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"historical_data\",\n      onClick: () => this.displayHistoricalData(this.state.clickCompanySymbol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, \"Historical Data\")))) : '')), this.state.isSelectHistorical ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, \"Date\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, \"Open\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873\n      },\n      __self: this\n    }, \"High\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    }, \"Low\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, \"Close\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, \"Adj Close\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }, \"Volume\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    }, this.state.historicalArray.map(historicalData => React.createElement(TableRow, {\n      key: historicalData.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }, historicalData.date), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    }, historicalData.open), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, historicalData.high), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    }, historicalData.low), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, historicalData.close), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, historicalData.adjclose), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889\n      },\n      __self: this\n    }, historicalData.volume))))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, chartrender ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, this.state.isIntervalValue ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, this.displayGraphOfInterval()) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, this.state.isIndicatorGraph ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, this.displayGraphOfIndicator()) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, this.state.isComparedCompany ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, this.displayGraphOfComparison()) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, chartrender)))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }))) : 'No data found';\n    /** display watchlist company list */\n\n    let displayCompany = this.state.companyData.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899\n      },\n      __self: this\n    }, this.state.companyData.map(company => React.createElement(List, {\n      key: company.key,\n      className: \"cursorClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      onClick: () => this.displaySelectedCompanyGraph(company),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: company.symbol,\n      secondary: company.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"Delete\",\n      style: {\n        color: '#a8a9b5 '\n      },\n      onClick: this.deleteCompany.bind(this, company.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904\n      },\n      __self: this\n    }, React.createElement(RemoveCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    })))))), \" \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, \" \", React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, \"Add Comapany to watchlist\")));\n    /** dispaly graph or search list and no company added or search then dispaly 'no data found' */\n\n    let displayData = this.state.companyData.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, showGraphOrSearchResult) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, \"No Company Found\")));\n    /** when searchbar is open but not enter a value */\n\n    if (this.state.isOpenSearch && !this.state.isSearchClick) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid_class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stock_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: logo,\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        onClick: () => this.logOut(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, \"Logout\")))), this.addComapny(), React.createElement(\"div\", {\n        className: \"grid_class1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"company_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plus_class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"primary\",\n        edge: \"end\",\n        \"aria-label\": \"Delete\",\n        className: \"addIcon\",\n        onClick: () => this.openSearchbar(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"watchlist_heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951\n        },\n        __self: this\n      }, \"Manage WatchList\")))), this.state.companyData.map(company => React.createElement(List, {\n        key: company.key,\n        className: \"vl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: company.symbol,\n        secondary: company.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"Delete\",\n        style: {\n          color: '#a8a9b5'\n        },\n        onClick: this.deleteCompany.bind(this, company.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961\n        },\n        __self: this\n      }, React.createElement(RemoveCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962\n        },\n        __self: this\n      })))))))), React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitSearchValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 10,\n        md: 9,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-with-placeholder\",\n        label: \"Search\",\n        className: \"search_input\",\n        value: this.state.value,\n        onChange: this.getSearchValue,\n        placeholder: \"Search here...\",\n        InputLabelProps: {\n          shrink: true\n        },\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 3,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"search_button\",\n        id: \"search\",\n        type: \"submit\",\n        onClick: this.submitSearchValue,\n        style: {\n          color: '#fff'\n        },\n        disabled: !this.state.value,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        },\n        __self: this\n      }, \"Search\")))))))));\n      /** searchbar is open then it's return */\n    } else if (this.state.isSearchClick) {\n      if (!this.state.searchResponse.length) {\n        console.log(\"========else if ========if======\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1007\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1008\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"stock_header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1009\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: logo,\n          alt: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1010\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1014\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1015\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          onClick: () => this.logOut(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1015\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1016\n          },\n          __self: this\n        }, \"Logout\"))))), this.addComapny(), React.createElement(\"div\", {\n          className: \"grid_class1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1022\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1023\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1024\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"company_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1025\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"plus_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1034\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1035\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1036\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          className: \"addIcon\",\n          onClick: () => this.openSearchbar(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1037\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1038\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1041\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"watchlist_heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1042\n          },\n          __self: this\n        }, \"Manage WatchList\")))), this.state.companyData.map(company => React.createElement(List, {\n          key: company.key,\n          className: \"cursorClass vl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1047\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          onClick: () => this.displaySelectedCompanyGraph(company),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1048\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: company.symbol,\n          secondary: company.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1049\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          style: {\n            color: '#a8a9b5'\n          },\n          onClick: this.deleteCompany.bind(this, company.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1051\n          },\n          __self: this\n        }, React.createElement(RemoveCircle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1052\n          },\n          __self: this\n        })))))))), React.createElement(Grid, {\n          item: true,\n          sm: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1060\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"search_bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"searching_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"searchCompany_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1063\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            margin: \"20px 0px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1064\n          },\n          __self: this\n        }, \"Showing Results for: \", React.createElement(\"span\", {\n          style: {\n            textTransform: 'capitalize'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1064\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1064\n          },\n          __self: this\n        }, this.state.searchValue))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1065\n          },\n          __self: this\n        }, \"No Data Found\"))))))));\n      } else {\n        console.log(\"else if =========else\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1077\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1078\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"stock_header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1079\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: logo,\n          alt: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1080\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1084\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          onClick: () => this.logOut(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1086\n          },\n          __self: this\n        }, \"Logout\"))))), this.addComapny(), React.createElement(\"div\", {\n          className: \"grid_class1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1091\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1092\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1093\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"company_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1094\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"plus_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1103\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1104\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1105\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          className: \"addIcon\",\n          onClick: () => this.openSearchbar(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1106\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1107\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1110\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"watchlist_heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1111\n          },\n          __self: this\n        }, \"Manage WatchList\")))), this.state.companyData.map(company => React.createElement(List, {\n          key: company.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1116\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: \"vl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1117\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: company.symbol,\n          secondary: company.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1118\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1119\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          style: {\n            color: '#a8a9b5'\n          },\n          onClick: this.deleteCompany.bind(this, company.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1120\n          },\n          __self: this\n        }, React.createElement(RemoveCircle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1121\n          },\n          __self: this\n        })))))))), React.createElement(Grid, {\n          item: true,\n          sm: 9,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1129\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"search_bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1130\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.submitSearchValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1145\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1146\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          lg: 10,\n          md: 9,\n          xs: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1147\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1148\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-with-placeholder\",\n          label: \"Search\",\n          className: \"search_input\",\n          value: this.state.value,\n          onChange: this.getSearchValue,\n          placeholder: \"Search here...\",\n          InputLabelProps: {\n            shrink: true\n          },\n          margin: \"normal\",\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1149\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          lg: 2,\n          md: 3,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1162\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"search_button\",\n          id: \"search\",\n          type: \"submit\",\n          onClick: this.submitSearchValue,\n          style: {\n            color: '#fff'\n          },\n          disabled: !this.state.value,\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1163\n          },\n          __self: this\n        }, \"Search\")))), React.createElement(\"div\", {\n          className: \"searchCompany_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1170\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            margin: \"20px 0px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1171\n          },\n          __self: this\n        }, \"Showing Results for: \", React.createElement(\"span\", {\n          style: {\n            textTransform: 'capitalize'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1171\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1171\n          },\n          __self: this\n        }, this.state.searchValue))), React.createElement(Row, {\n          className: \"m-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1172\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1173\n          },\n          __self: this\n        }, this.state.searchResponse.map(data => React.createElement(Grid, {\n          item: true,\n          lg: 3,\n          md: 4,\n          sm: 6,\n          xs: 12,\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1175\n          },\n          __self: this\n        }, React.createElement(List, {\n          className: \"search_accordian\",\n          key: data['1. symbol'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1176\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1177\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: data['1. symbol'],\n          secondary: data['2. name'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1178\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1179\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          onClick: () => this.addCompanytoWatchlist(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1180\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1181\n          },\n          __self: this\n        })))))))))))))));\n      }\n    } else {\n      if (!this.state.isOpenCompanyList) {\n        console.log(\"=====else ==========if\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1202\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1203\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"stock_header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1204\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: logo,\n          alt: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1205\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1209\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1210\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          onClick: () => this.logOut(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1210\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1211\n          },\n          __self: this\n        }, \"Logout\"))))), React.createElement(\"div\", {\n          className: \"grid_class1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1215\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1216\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1217\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"company_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1218\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"plus_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1219\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1220\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1221\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          className: \"addIcon\",\n          onClick: () => this.openSearchbar(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1222\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1223\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1226\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"watchlist_heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1227\n          },\n          __self: this\n        }, \"Manage WatchList\")))), displayCompany)), React.createElement(Grid, {\n          item: true,\n          sm: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1234\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"graph_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1235\n          },\n          __self: this\n        }, displayData)))));\n      }\n    }\n  }\n  /** get data of searching company */\n\n\n  getApiData() {\n    console.log(\"value:\", this.state.value);\n    const companySymbol = this.state.value;\n    API.getApiData(companySymbol).then(res => {\n      try {\n        console.log(\"resssssssss:\", res);\n        console.log(\"data of response:\", res['bestMatches']);\n        this.setState({\n          searchResponse: res['bestMatches'],\n          isSearchClick: true,\n          isLoaded: true\n        });\n\n        if (!this.state.searchResponse.length) {\n          console.log(\"searchrespone:\", this.state.searchResponse.length);\n          console.log(\"===if callling===\");\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1266\n            },\n            __self: this\n          }, \"\\\"No Data Found\\\"\");\n        }\n      } catch (err) {\n        swal('Internal Server Error');\n      }\n    }).catch(err => {\n      swal('Internal Server Error');\n    });\n  }\n  /** get current date */\n  // getDate = () => {\n  //     let date = new Date().toDateString();\n  //     this.setState({ date });\n  // };\n\n  /**\r\n   * @param {string} id wise delete company from watchlist \r\n   */\n\n\n  deleteCompany(id) {\n    firebase.firestore().collection('company').doc(id).delete().then(() => {\n      console.log(\"cdata:\", this.state.companyData);\n      swal(\"Successfully deleted!\", \"\", \"success\");\n      console.log(\"Document successfully deleted!\");\n\n      if (this.state.companyData.length === 1) {\n        window.location.reload();\n      }\n    }).catch(error => {\n      swal('Internal Server Error');\n    });\n  }\n  /**\r\n   * @param {object} data wise display graph \r\n   */\n\n\n  displaySelectedCompanyGraph(data) {\n    this.state.isSelectHistorical = false;\n    this.state.isIndicatorGraph = false;\n    this.state.isComparedCompany = false;\n    this.state.isSelectinterval = false;\n    this.state.isIntervalValue = false;\n    this.setState({\n      isLoaded: false,\n      isSelectinterval: false,\n      isSelectHistorical: false,\n      isComparedCompany: false,\n      isIndicatorGraph: false\n    });\n    console.log('data: ', data);\n    let grapharray = [];\n    const companySymbol = data.symbol;\n    API.displaySelectedCompanyGraph(companySymbol).then(res => {\n      try {\n        const error = res['Error Message'];\n\n        if (res) {\n          const originalObject = res['Time Series (5min)'];\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              grapharray.push({\n                date: key,\n                open: originalObject[key]['1. open'],\n                high: originalObject[key]['2. high'],\n                low: originalObject[key]['3. low'],\n                close: originalObject[key]['4. close'],\n                volume: originalObject[key]['5. volume']\n              });\n            }\n\n            this.setState({\n              grapharray: grapharray,\n              open: grapharray['0'].open,\n              close: grapharray['0'].close,\n              high: grapharray['0'].high,\n              low: grapharray['0'].low,\n              volume: grapharray['0'].volume,\n              clickCompanyName: data.name,\n              clickCompanySymbol: data.symbol,\n              isLoaded: true,\n              isGraphDisplay: true\n            });\n            console.log(\"isGraphDisplay after======>\", this.state.isGraphDisplay);\n          } else if (error) {\n            setTimeout(this.setState({\n              isLoaded: true\n            }), 3000);\n\n            if (error === 'Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.') {\n              swal('There is no data found!');\n            } else {\n              swal('Internal Server Error');\n            }\n          }\n        }\n      } catch (err) {\n        swal('Internal Server Error ');\n      }\n    }).catch(err => {\n      swal('Internal Server Error');\n    });\n  }\n  /** logout and clear localstorage */\n\n\n  /** open searchbar onclick of plus sign */\n  openSearchbar() {\n    this.setState({\n      isOpenSearch: true\n    });\n  }\n  /** display watchlist onclick of done */\n\n\n  openCompanyList() {\n    this.setState({\n      isOpenCompanyList: false\n    });\n    console.log(\"isOpenCompanyList:\", this.state.isOpenCompanyList);\n    history.push('/Watch-list');\n  }\n  /** get current user added company from database */\n\n\n  getCompany() {\n    let companyData = [];\n    localStorage.getItem('email1');\n    let email = localStorage.email1;\n    console.log('email==========>', email);\n    firebase.firestore().collection(\"company\").where(\"email\", \"==\", email).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        const _doc$data2 = doc.data(),\n              name = _doc$data2.name,\n              symbol = _doc$data2.symbol;\n\n        companyData.push({\n          key: doc.id,\n          doc,\n          name,\n          symbol\n        });\n      });\n      setLoader(true);\n\n      if (companyData.length) {\n        console.log('found data==========>', companyData);\n        setTheState(companyData);\n        console.log(\"call\");\n        displayGraph();\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1419\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1420\n          },\n          __self: this\n        }, \"No data found\"));\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n\n    let setLoader = isLoaded => {\n      this.setState({\n        isLoaded: isLoaded\n      });\n    };\n\n    let setTheState = companyData => {\n      this.setState({\n        companyData: companyData,\n        isLoaded: true\n      });\n    };\n\n    let displayGraph = () => {\n      console.log(\"companyData before:\", this.state.companyData);\n      console.log(\"companyData:\", this.state.companyData);\n      let firstCompanySymbol = this.state.companyData[0];\n      console.log(\"firstCompanySymbol\", firstCompanySymbol);\n      this.displaySelectedCompanyGraph(firstCompanySymbol);\n    };\n  }\n\n  render() {\n    const isLoaded = this.state.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lds-spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      })));\n    } else if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1459\n        },\n        __self: this\n      }, this.displayCompanyList());\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1466\n        },\n        __self: this\n      }, \"Sorry no data found\"));\n    }\n  }\n\n}\n\nexport default Companylist;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\stock_viewer\\src\\components\\Company-list.js"],"names":["React","Component","Link","firebase","ReactApexChart","swal","Grid","Button","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","AddIcon","RemoveCircle","Typography","TextField","InputAdornment","MenuItem","Table","TableBody","TableCell","TableHead","TableRow","Paper","API","history","Image","Row","logo","checked","options","chart","stacked","zoom","type","enabled","toolbar","autoSelected","plotOptions","line","curve","dataLabels","markers","size","style","colors","opacity","title","text","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","min","max","labels","formatter","val","toFixed","xaxis","tooltip","shared","y","ranges","value","label","indicatorList","Companylist","constructor","props","checkIfalreadyAddOrNot","companyName","state","isSearchClick","isOpenCompanyList","console","log","localStorage","getItem","email","email1","companyData","firestore","collection","where","get","then","querySnapshot","forEach","doc","data","name","push","key","id","length","willDelete","window","location","reload","catch","err","addCompanyToDatabase","isLoaded","ref","add","symbol","companySymbol","buttons","cancel","cancelButtonText","docRef","error","selectInterval","prop","event","isSelectHistorical","intervalApiData","intervalArray","isComparedCompany","intervalData","intervalValue","target","res","setState","isIntervalValue","isSelectinterval","selectedInterval","graphData","originalObject","date","open","high","low","close","volume","displayGraphOfInterval","setTimeout","selectComparisonCompany","isIndicatorGraph","firstCompany","selectedCompany","firstSelectedCompanyArray","comparedCompanyData","firstSelectedCompany","Note","alert","originalObjectforDisplay","secondSelectedCompanyArray","displayGraphOfComparison","getSelectedIndicatorData","indicatorData","selectedCompanySymbol","indicatorValue","indicatorGraphData","indicatorDataArray","indicatorObj","displayGraphOfIndicator","logOut","auth","signOut","clear","removeItem","unsubscribe","user","array","searchResponse","results","query","searchValue","userEmail","grapharray","historicalArray","comparisonOfVolume","historicalOpen","historicalClose","historicalHigh","historicalLow","historicalVolume","historicalAdjClose","values","intervalRange","clickCompanyName","clickCompanySymbol","isToggleOn","setOpen","modalOpen","isOpenSearch","isGraphDisplay","checkAlreadyAddOrNot","addCompanytoWatchlist","bind","getSearchValue","submitSearchValue","getCompany","displaySelectedCompanyGraph","openSearchbar","displayCompanyList","componentDidMount","preventDefault","getApiData","addComapny","displayHistoricalData","historicalData","adjclose","icon","dangerMode","graphSeries","chartData","i","obj","JSON","parse","innerArr","series","chartrender","diffrence","first","second","map","color","marginRight","showGraphOrSearchResult","margin","startAdornment","indicator","company","option","displayCompany","deleteCompany","displayData","shrink","textTransform","width","delete","openCompanyList","setLoader","setTheState","displayGraph","firstCompanySymbol","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../Firebase';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport swal from 'sweetalert';\r\nimport '../App.css';\r\nimport './Company-list.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport API from '../service';\r\nimport history from '../History';\r\nimport {Image, Row} from 'react-bootstrap';\r\nimport logo from './logo.png';\r\nimport checked from './checked.png';\r\n\r\n\r\nconst options = {\r\n    chart: {\r\n        stacked: false,\r\n        zoom: {\r\n            type: 'x',\r\n            enabled: true\r\n        },\r\n        toolbar: {\r\n            autoSelected: 'zoom'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        line: {\r\n            curve: 'smooth',\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n\r\n    markers: {\r\n        size: 0,\r\n        style: 'full',\r\n    },\r\n    colors: ['#ff4d4d'],\r\n    opacity: 0.4,\r\n    title: {\r\n        text: 'Stock Price Movement',\r\n        align: 'left'\r\n    },\r\n    fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n            shadeIntensity: 1,\r\n            inverseColors: false,\r\n            opacityFrom: 0.5,\r\n            opacityTo: 0,\r\n            stops: [0, 90, 100]\r\n        },\r\n    },\r\n    yaxis: {\r\n        min: 0,\r\n        max: 250000,\r\n        labels: {\r\n            formatter: function (val) {\r\n                return (val).toFixed(0);\r\n            },\r\n        },\r\n        title: {\r\n            text: 'Price'\r\n        },\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n    },\r\n    tooltip: {\r\n        shared: false,\r\n        y: {\r\n            formatter: function (val) {\r\n                return (val / 1000).toFixed(0)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst ranges = [\r\n    {\r\n        value: '1min',\r\n        label: '1 min',\r\n    },\r\n    {\r\n        value: '5min',\r\n        label: '5 mins',\r\n    },\r\n    {\r\n        value: '15min',\r\n        label: '15 mins',\r\n    },\r\n    {\r\n        value: '30min',\r\n        label: '30 mins',\r\n    },\r\n    {\r\n        value: '60min',\r\n        label: '1 hour',\r\n    }\r\n];\r\n\r\nconst indicatorList = [\r\n    {\r\n        value: 'SMA',\r\n        label: 'simple moving average (SMA)',\r\n    },\r\n    {\r\n        value: 'EMA',\r\n        label: ' Exponential moving average (EMA) '\r\n    },\r\n    {\r\n        value: 'MACD',\r\n        label: 'Moving average convergence / divergence (MACD)',\r\n    },\r\n    {\r\n        value: 'MACDEXT',\r\n        label: 'Moving average convergence / divergence'\r\n    },\r\n    {\r\n        value: 'APO',\r\n        label: 'Absolute price oscillator (APO)',\r\n    },\r\n    {\r\n        value: 'RSI',\r\n        label: 'Relative strength index (RSI)',\r\n    },\r\n    {\r\n        value: 'ROC',\r\n        label: ' Rate of change(ROC)'\r\n    },\r\n    {\r\n        value: 'ROCR',\r\n        label: 'Rate of change ratio (ROCR)'\r\n    },\r\n    {\r\n        value: 'ADX',\r\n        label: 'Average directional movement index (ADX) ',\r\n    },\r\n    {\r\n        value: 'AROONOSC',\r\n        label: ' Aroon oscillator (AROONOSC)'\r\n    },\r\n    {\r\n        value: 'TRIX',\r\n        label: 'Triple smooth exponential moving average (TRIX)',\r\n    },\r\n    {\r\n        value: 'OBV',\r\n        label: 'On balance volume (OBV) ',\r\n    }\r\n];\r\n\r\nclass Companylist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = firebase.firestore().collection('company');\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n            user: [],\r\n            array: [],\r\n            searchResponse: [],\r\n            results: [],\r\n            companyData: [],\r\n            query: '',\r\n            value: '',\r\n            searchValue: '',\r\n            companySymbol: '',\r\n            companyName: '',\r\n            symbol: '',\r\n            name: '',\r\n            userEmail: '',\r\n            grapharray: [],\r\n            date: \"\",\r\n            open: '',\r\n            close: '',\r\n            high: '',\r\n            low: '',\r\n            volume: '',\r\n            indicatorObj: '',\r\n            historicalArray: [],\r\n            intervalArray: [],\r\n            graphData: [],\r\n            intervalData: [],\r\n            firstSelectedCompanyArray: [],\r\n            secondSelectedCompanyArray: [],\r\n            indicatorDataArray: [],\r\n            indicatorGraphData: [],\r\n            comparisonOfVolume: [],\r\n            historicalOpen: '',\r\n            historicalClose: '',\r\n            historicalHigh: '',\r\n            historicalLow: '',\r\n            historicalVolume: '',\r\n            historicalAdjClose: '',\r\n            values: '',\r\n            firstCompany: '',\r\n            selectedCompany: '',\r\n            selectedInterval: '',\r\n            intervalRange: '',\r\n            clickCompanyName: '',\r\n            clickCompanySymbol: '',\r\n            firstSelectedCompany: '',\r\n            isToggleOn: true,\r\n            setOpen: false,\r\n            modalOpen: false,\r\n            isLoaded: false,\r\n            isSearchClick: false,\r\n            isOpenSearch: false,\r\n            isOpenCompanyList: false,\r\n            isSelectinterval: false,\r\n            isGraphDisplay: false,\r\n            isSelectHistorical: false,\r\n            isIntervalValue: false,\r\n            isIndicatorGraph: false,\r\n            isComparedCompany: false,\r\n            checkAlreadyAddOrNot: false,\r\n            \r\n        };\r\n        this.addCompanytoWatchlist = this.addCompanytoWatchlist.bind(this);\r\n        this.getSearchValue = this.getSearchValue.bind(this);\r\n        this.submitSearchValue = this.submitSearchValue.bind(this);\r\n        this.getCompany = this.getCompany.bind(this);\r\n        this.displaySelectedCompanyGraph = this.displaySelectedCompanyGraph.bind(this);\r\n        this.openSearchbar = this.openSearchbar.bind(this);\r\n        this.displayCompanyList = this.displayCompanyList.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCompany();\r\n        // this.getDate();\r\n        // this.unsubscribe = this.ref.onSnapshot(this.getCompany);\r\n    }\r\n\r\n\t/**\r\n     * @param {object} event get name or symbol of search company\r\n     */\r\n    getSearchValue(event) {\r\n        this.setState({ value: event.target.value, searchValue: event.target.value });\r\n    }\r\n\r\n\t/**\r\n     * @param {object} event validation of search button \r\n     */\r\n    submitSearchValue(event) {\r\n        this.setState({ value: '', isLoaded: false });\r\n        /**validation for search input */\r\n        if (!this.state.value) {\r\n            swal(\"Please, Enter value\", \"\", \"info\");\r\n        } else {\r\n            console.log(\"name:\", this.state.value);\r\n            console.log(\"searchValue\", this.state.searchValue);\r\n            event.preventDefault();\r\n            this.getApiData();\r\n            this.setState({ value: '' });\r\n        }\r\n    }\r\n\r\n\t/**\r\n     * @param {object} data call add company function and get name and symbol of add company \r\n     */\r\n    addCompanytoWatchlist(data) {\r\n        console.log('data: ', data);\r\n        this.setState({ companySymbol: data['1. symbol'], companyName: data['2. name'] });\r\n        this.getApiData();\r\n        this.addComapny();\r\n    }\r\n\r\n\t/**\r\n\t * @param {string} companySymbol wise display historical data table \r\n\t */\r\n    displayHistoricalData(companySymbol) {\r\n        const historicalData = companySymbol\r\n        console.log(\"historical data:\", historicalData);\r\n        console.log(\"symbol of selected company==============>\", companySymbol);\r\n        console.log(\"type:\", typeof companySymbol)\r\n        this.setState({ isSelectHistorical: true, isSelectinterval: false, historicalArray: [], isComparedCompany: false })\r\n        API.displayHistoricalData(historicalData)\r\n            .then((res) => {\r\n                try {\r\n                    const originalObject = res['Time Series (Daily)'];\r\n                    console.log('originalObject: ', originalObject);\r\n                    if (originalObject) {\r\n                        for (let key in originalObject) {\r\n                            this.state.historicalArray.push({\r\n                                date: key,\r\n                                open: originalObject[key]['1. open'],\r\n                                high: originalObject[key]['2. high'],\r\n                                low: originalObject[key]['3. low'],\r\n                                close: originalObject[key]['4. close'],\r\n                                adjclose: originalObject[key]['5. adjusted close'],\r\n                                volume: originalObject[key]['6. volume']\r\n                            })\r\n                        }\r\n                        console.log(\"historicalArray==========>\", this.state.historicalArray);\r\n                        this.setState({ isSelectHistorical: true })\r\n                    } else {\r\n                        swal('Internal Server Error');\r\n                    }\r\n                } catch (err) {\r\n                    swal('Internal Server Error');\r\n                }\r\n            }).catch((err) => {\r\n                swal('Internal Server Error')\r\n            })\r\n    }\r\n\r\n    /** selected symbol to add in watchlist */\r\n    addComapny() {\r\n        if (this.state.companySymbol) {\r\n            console.log(\"addCompany2:\", this.state.companySymbol);\r\n            console.log(\"image==========>\",checked)\r\n            return (\r\n                swal({\r\n                    title: this.state.companySymbol,\r\n                    text: this.state.companyName,\r\n                    icon: \"success\",\r\n                    dangerMode: true,\r\n                    buttons: {\r\n                        cancel: true,\r\n                        cancelButtonText: \"X\"\r\n                    },\r\n                    // imageUrl: 'https://image.flaticon.com/icons/svg/19/19973.svg'\r\n                })\r\n                // swal({\r\n                //     title: this.state.companySymbol,\r\n                //     text: this.state.companyName,\r\n                //     imageUrl: 'checked.png',\r\n                //     imageHeight: 500,\r\n                //     animation: true,\r\n                //     showCloseButton: true,\r\n                //     showCancelButton: true\r\n                //   })\r\n                .then((willDelete) => {\r\n                    if (willDelete) {\r\n                        this.checkIfalreadyAddOrNot(this.state.companyName)\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * @param {string} companyName already add or not \r\n\t */\r\n    checkIfalreadyAddOrNot = (companyName) => {\r\n        this.state.isSearchClick = false;\r\n        this.state.isOpenCompanyList = false;\r\n        console.log('getcompany:');\r\n        localStorage.getItem('email1')\r\n        const email = localStorage.email1;\r\n        console.log(companyName)\r\n        let companyData = [];\r\n        /** it's check selected company already added into database or not */\r\n        firebase.firestore().collection(\"company\").where(\"name\", \"==\", companyName).where(\"email\", \"==\", email)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                console.log(\"querySnapshot\", querySnapshot)\r\n                querySnapshot.forEach(function (doc) {\r\n                    const { name, email } = doc.data();\r\n                    console.log(\"data:\", doc.data())\r\n                    companyData.push({\r\n                        key: doc.id,\r\n                        doc,\r\n                        name,\r\n                        email,\r\n                    });\r\n                });\r\n                console.log(\"data1:\", companyData.length);\r\n                if (companyData.length) {\r\n                    console.log('found data', companyData);\r\n                    swal(\"Already added!\", \"\", \"info\")\r\n                        .then((willDelete) => {\r\n                            if (willDelete) {\r\n                                window.location.reload();\r\n                            }\r\n                        }).catch((err) => {\r\n                            console.log(\"hey error:\", err);\r\n                            swal('Internal Server Error');\r\n                        })\r\n                } else {\r\n                    console.log(\"new company\");\r\n                    addCompanyToDatabase()\r\n                }\r\n            }).catch((err) => {\r\n                swal('Internal Server Error');\r\n            })\r\n\r\n        /** Add comapny to database */\r\n        const addCompanyToDatabase = () => {\r\n            localStorage.getItem('email1')\r\n            let email = localStorage.email1;\r\n            console.log(\"isLoaded before:\", this.state.isLoaded);\r\n            this.ref.add({\r\n                symbol: this.state.companySymbol,\r\n                name: this.state.companyName,\r\n                email: email,\r\n                buttons: {\r\n                    cancel: true,\r\n                    cancelButtonText: \"X\"\r\n                },\r\n            }).then((docRef) => {\r\n                window.location.reload();\r\n            }).catch((error) => {\r\n                swal('Internal Server Error');\r\n            })\r\n        }\r\n    }\r\n\r\n    /** api call for selected interval value */\r\n    selectInterval = prop => event => {\r\n        this.state.isSelectHistorical = false;\r\n        let intervalApiData = [];\r\n        this.state.intervalArray = [];\r\n        this.state.isComparedCompany = false;\r\n        const intervalData = {\r\n            symbol: prop,\r\n            intervalValue: event.target.value\r\n        }\r\n        API.selectInterval(intervalData)\r\n            .then((res) => {\r\n                try {\r\n                    this.setState({ isIntervalValue: true, isSelectinterval: true, isSelectHistorical: false, isComparedCompany: false, selectedInterval: prop, graphData: [], isLoaded: true });\r\n                    let originalObject = res['Time Series (' + event.target.value + ')'];\r\n                    console.log('originalObject: ', originalObject);\r\n                    console.log(\"interval array======second time===>\", this.state.intervalArray);\r\n                    if (originalObject) {\r\n                        for (let key in originalObject) {\r\n                            intervalApiData.push({\r\n                                date: key,\r\n                                open: originalObject[key]['1. open'],\r\n                                high: originalObject[key]['2. high'],\r\n                                low: originalObject[key]['3. low'],\r\n                                close: originalObject[key]['4. close'],\r\n                                volume: originalObject[key]['5. volume']\r\n                            })\r\n                        }\r\n                        this.setState({ intervalArray: intervalApiData, isIntervalValue: true })\r\n                        this.displayGraphOfInterval();\r\n                    } else {\r\n                        setTimeout(this.setState({ isLoaded: true }), 3000);\r\n                        swal('Internal Server Error');\r\n                    }\r\n                } catch (err) {\r\n                    console.log(\"err====\", err);\r\n                    swal('Internal Server Error');\r\n                }\r\n            }).catch((err) => {\r\n                swal('Internal Server Error');\r\n            })\r\n    };\r\n\r\n    /** display graph of selected interval */\r\n    displayGraphOfInterval() {\r\n        const graphSeries = this.state.intervalArray;\r\n        let chartData = 1484418600000;\r\n        this.state.intervalData = [];\r\n        for (let i = 0; i < graphSeries.length; i++) {\r\n            chartData = chartData + 86400000;\r\n            let obj = JSON.parse(graphSeries[i].volume)\r\n            let innerArr = [chartData, obj];\r\n            this.state.intervalData.push(innerArr);\r\n        }\r\n        let series = [{\r\n            name: 'Stock price',\r\n            type: 'area',\r\n            data: this.state.intervalData\r\n        }\r\n        ]\r\n        /**display chart of selected interval */\r\n        let chartrender =\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={options} series={series} type=\"area\" height=\"400\" />\r\n            </div>\r\n        return (<div>\r\n            {chartrender}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    /** select company and call api of selected company */\r\n    selectComparisonCompany = prop => event => {\r\n        this.state.isComparedCompany = true;\r\n        this.state.isSelectHistorical = false;\r\n        this.state.isSelectinterval = false;\r\n        this.state.isIndicatorGraph = false;\r\n        this.state.isIntervalValue = false;\r\n        const companySymbol = event.target.value\r\n        API.selectComparisonCompany(companySymbol)\r\n            .then((res) => {\r\n                try {\r\n                    this.setState({ isComparedCompany: true, firstCompany: prop, isIndicatorGraph: false, selectedCompany: event.target.value })\r\n                    const originalObject = res['Time Series (5min)'];\r\n                    console.log(\"res==========>\", originalObject);\r\n                    if (originalObject) {\r\n                        for (let key in originalObject) {\r\n                            this.state.firstSelectedCompanyArray.push({\r\n                                date: key,\r\n                                open: originalObject[key]['1. open'],\r\n                                high: originalObject[key]['2. high'],\r\n                                low: originalObject[key]['3. low'],\r\n                                close: originalObject[key]['4. close'],\r\n                                volume: originalObject[key]['5. volume']\r\n                            })\r\n                        }\r\n                        console.log(\"comparison Array1=======>\", this.state.firstSelectedCompanyArray);\r\n                        this.comparedCompanyData();\r\n                    } else {\r\n                        setTimeout(this.setState({ isLoaded: true }), 3000);\r\n                        swal('Internal Server Error');\r\n                    }\r\n                } catch (err) {\r\n                    console.log(\"err:\", err)\r\n                    swal('Internal Server Error');\r\n                }\r\n            }).catch((err) => {\r\n                swal('Internal Server Error');\r\n            })\r\n        console.log(\"this.state.isComparedCompany:\", this.state.isComparedCompany);\r\n    }\r\n\r\n    /** get data of first selected company  */\r\n    comparedCompanyData = () => {\r\n        let selectedCompany = [];\r\n        let firstSelectedCompany = this.state.firstCompany;\r\n        API.selectComparisonCompany(firstSelectedCompany)\r\n            .then((res) => {\r\n                try {\r\n                    console.log(\"res============>\", res);\r\n                    if (res.Note == 'Thank you for using Alpha Vantage! Our standard AP…would like to target a higher API call frequency.') {\r\n                        alert('wait 1 minute');\r\n                    } else {\r\n                        const originalObjectforDisplay = res['Time Series (5min)'];\r\n                        console.log(\"originalObject===========>\", originalObjectforDisplay);\r\n                        if (originalObjectforDisplay) {\r\n                            for (let key in originalObjectforDisplay) {\r\n                                selectedCompany.push({\r\n                                    date: key,\r\n                                    open: originalObjectforDisplay[key]['1. open'],\r\n                                    high: originalObjectforDisplay[key]['2. high'],\r\n                                    low: originalObjectforDisplay[key]['3. low'],\r\n                                    close: originalObjectforDisplay[key]['4. close'],\r\n                                    volume: originalObjectforDisplay[key]['5. volume']\r\n                                })\r\n                            }\r\n                            this.setState({ secondSelectedCompanyArray: selectedCompany })\r\n                            console.log(\"comparison Array2=======>\", this.state.secondSelectedCompanyArray);\r\n                        } else {\r\n                            swal('Internal Server Error');\r\n                        }\r\n                    }\r\n                    /**selecte other company then call below function */\r\n                    if (this.state.secondSelectedCompanyArray.length && this.state.firstSelectedCompanyArray.length) {\r\n                        this.displayGraphOfComparison();\r\n                    }\r\n                } catch (err) {\r\n                    swal('Internal Server Error');\r\n                }\r\n            });\r\n    }\r\n\r\n    /** display table of both company*/\r\n    displayGraphOfComparison() {\r\n        if (this.state.firstSelectedCompanyArray.length && this.state.secondSelectedCompanyArray.length) {\r\n            this.state.comparisonOfVolume = [];\r\n            console.log(\"length1:::\", this.state.firstSelectedCompanyArray.length);\r\n            console.log(\"length2:::\", this.state.secondSelectedCompanyArray.length);\r\n            if (this.state.firstSelectedCompanyArray.length > this.state.secondSelectedCompanyArray.length) {\r\n                for (let i = 0; i < this.state.secondSelectedCompanyArray.length; i++) {\r\n                    console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\r\n                    console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume)\r\n                    this.state.comparisonOfVolume.push({ date: this.state.firstSelectedCompanyArray[i].date, diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume, first: this.state.secondSelectedCompanyArray[i].volume, second: this.state.firstSelectedCompanyArray[i].volume });\r\n                }\r\n            } else {\r\n                for (let i = 0; i < this.state.firstSelectedCompanyArray.length; i++) {\r\n                    console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\r\n                    console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume)\r\n                    this.state.comparisonOfVolume.push({ date: this.state.firstSelectedCompanyArray[i].date, diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume, first: this.state.secondSelectedCompanyArray[i].volume, second: this.state.firstSelectedCompanyArray[i].volume });\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <Paper>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>{this.state.firstCompany}</TableCell>\r\n                                    <TableCell>{this.state.selectedCompany}</TableCell>\r\n                                    <TableCell>Differnce</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {/**display table of compared company data */}\r\n                                {this.state.comparisonOfVolume.map(data => (\r\n                                    <TableRow key={data.diffrence}>\r\n                                        <TableCell>{data.date}</TableCell>\r\n                                        <TableCell>{data.first}</TableCell>\r\n                                        <TableCell>{data.second}</TableCell>\r\n                                        <TableCell>{data.diffrence}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    /** select indicator and call API of selcted indicator */\r\n    getSelectedIndicatorData = prop => event => {\r\n        console.log(\"event:\", event.target.value);\r\n        console.log(\"prop:\", prop);\r\n        const indicatorData = {\r\n            selectedCompanySymbol: prop,\r\n            indicatorValue: event.target.value\r\n        }\r\n        API.getSelectedIndicatorData(indicatorData)\r\n            .then((res) => {\r\n                try {\r\n                    this.setState({ indicatorGraphData: [], indicatorDataArray: [], isIndicatorGraph: true, isIntervalValue: false, isSelectHistorical: false, isComparedCompany: false })\r\n                    const originalObject = res['Technical Analysis: ' + [event.target.value]];\r\n                    console.log(\"result:\", ['Technical Analysis: ' + [event.target.value]]);\r\n                    console.log(\"originalObject:\", originalObject);\r\n                    console.log(\"isIndicatorGraph:\", this.state.isIndicatorGraph);\r\n                    if (originalObject) {\r\n                        for (let key in originalObject) {\r\n                            this.state.indicatorDataArray.push({\r\n                                date: key,\r\n                                indicatorObj: originalObject[key][event.target.value],\r\n                            })\r\n                        }\r\n                    } else {\r\n                        swal('Internal Server Error')\r\n                    }\r\n                    console.log(\"indicatorDataArray:\", this.state.indicatorDataArray);\r\n                    this.displayGraphOfIndicator()\r\n                } catch (err) {\r\n                    swal('Internal Server Error');\r\n                }\r\n            }).catch((err) => {\r\n                console.log('hey error: ', err);\r\n            })\r\n    }\r\n\r\n    /** display graph of selected indicator */\r\n    displayGraphOfIndicator() {\r\n        console.log(\"indicator fun called\");\r\n        let graphSeries = this.state.indicatorDataArray;\r\n        console.log(\"length:\", graphSeries.length);\r\n        let chartData = 1484418600000;\r\n        for (let i = 0; i < graphSeries.length; i++) {\r\n            chartData = chartData + 86400000;\r\n            let obj = JSON.parse(graphSeries[i].indicatorObj)\r\n            let innerArr = [chartData, obj];\r\n            this.state.indicatorGraphData.push(innerArr);\r\n        }\r\n        console.log(\"graphData:\", this.state.indicatorGraphData);\r\n        let options = {\r\n            chart: {\r\n                stacked: false,\r\n                zoom: {\r\n                    type: 'x',\r\n                    enabled: true\r\n                },\r\n                toolbar: {\r\n                    autoSelected: 'zoom'\r\n                }\r\n            },\r\n            plotOptions: {\r\n                line: {\r\n                    curve: 'smooth',\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            markers: {\r\n                size: 0,\r\n                style: 'full',\r\n            },\r\n            colors: ['#ff4d4d'],\r\n            opacity: 0.4,\r\n            title: {\r\n                text: 'Stock Price Movement',\r\n                align: 'left'\r\n            },\r\n            fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shadeIntensity: 1,\r\n                    inverseColors: false,\r\n                    opacityFrom: 0.5,\r\n                    opacityTo: 0,\r\n                    stops: [0, 90, 100]\r\n                },\r\n            },\r\n            yaxis: {\r\n                min: 0,\r\n                max: 250,\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return (val).toFixed(0);\r\n                    },\r\n                },\r\n                title: {\r\n                    text: 'Price'\r\n                },\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n            },\r\n            tooltip: {\r\n                shared: false,\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return (val / 1000).toFixed(0)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let series = [{\r\n            name: 'Stock price',\r\n            data: this.state.indicatorGraphData\r\n        }]\r\n        /**display graph of selected indicator */\r\n        let chartrender =\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={options} series={series} type=\"area\" width=\"500\" />\r\n            </div>\r\n        return (<div>\r\n            {chartrender}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    /** display watchlist and graph or search list */\r\n    displayCompanyList() {\r\n        const { date } = this.state;\r\n        /** any company added into current user watchlist */\r\n        if (this.state.grapharray.length) {\r\n            let graphSeries = this.state.grapharray;\r\n            let chartData = 1484418600000;\r\n            let graphData = [];\r\n            for (let i = 0; i < graphSeries.length; i++) {\r\n                chartData = chartData + 86400000;\r\n                let obj = JSON.parse(graphSeries[i].volume)\r\n                let innerArr = [chartData, obj];\r\n                graphData.push(innerArr);\r\n            }\r\n            let series = [{\r\n                name: 'Stock price',\r\n                data: graphData\r\n            },\r\n            ]\r\n            /** display graph of selected company */\r\n            var chartrender =\r\n                <div>\r\n                    <div id=\"chart\">\r\n                        <ReactApexChart options={options} series={series} type=\"area\" height=\"400\" />\r\n                        <div className=\"chart_bottom\">\r\n                            <ul>\r\n                                <li style={{ color: 'gray' }}>Open: <span style={{ marginRight: 10 }}>{this.state.open}</span></li>\r\n                                <li style={{ color: 'gray' }}>Close: <span style={{ marginRight: 10 }}>{this.state.close}</span></li>\r\n                                <li style={{ color: 'gray' }}>High: <span style={{ marginRight: 10 }}>{this.state.high}</span></li>\r\n                                <li style={{ color: 'gray' }}>Low: <span style={{ marginRight: 10 }}>{this.state.low}</span></li>\r\n                                <li style={{ color: 'gray' }}>Volume: <span style={{ marginRight: 10 }}>{this.state.volume}</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>   \r\n                </div>\r\n        }\r\n        /** it's display graph or serch response table */\r\n        let showGraphOrSearchResult = this.state.searchResponse.length ? <div>\r\n            <center><h3>Search Response....</h3></center>\r\n            {this.state.searchResponse.map(data =>\r\n                <List key={data['1. symbol']} className=\"list\">\r\n                    <ListItem>\r\n                        <ListItemText className=\"search_list\" primary={data['1. symbol']} secondary={data['2. name']} />\r\n                        <ListItemSecondaryAction className=\"search_list1\">\r\n                            <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" onClick={() => this.addCompanytoWatchlist(data)} className=\"addIcon\">\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </List>\r\n            )}\r\n        </div> : (this.state.searchResponse ? <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={5}>\r\n                    <p className=\"company_symbol\">{this.state.clickCompanySymbol}</p><p className=\"company_subtitle\">{this.state.clickCompanyName}</p>\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                    {this.state.isGraphDisplay ? (<div className=\"listItem1\">\r\n                        <ul>\r\n                        <li><TextField\r\n                                select\r\n                                style={{ margin: 10 }}\r\n                                value={this.state.values.intervalRange}\r\n                                onChange={this.getSelectedIndicatorData(this.state.clickCompanySymbol)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">Indicator</InputAdornment>,\r\n                                }}>\r\n                                {indicatorList.map(indicator => (\r\n                                    <MenuItem key={indicator.value} value={indicator.value} >\r\n                                        {indicator.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField></li>\r\n                            <li><TextField\r\n                                select\r\n                                style={{ margin: 10 }}\r\n                                value={this.state.values.intervalRange}\r\n                                onChange={this.selectComparisonCompany(this.state.clickCompanySymbol)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">Comparison</InputAdornment>,\r\n                                }}>\r\n                                {this.state.companyData.map(company => (\r\n                                    <MenuItem key={company.symbol} value={company.symbol}>\r\n                                        {company.symbol}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField></li>\r\n                            <li><TextField\r\n                                select\r\n                                style={{ margin: 10 }}\r\n                                value={this.state.values.intervalRange}\r\n                                onChange={this.selectInterval(this.state.clickCompanySymbol)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">Interval</InputAdornment>,\r\n                                }}>\r\n                                {ranges.map(option => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField></li>\r\n                            <li><a href=\"#\" className=\"historical_data\" onClick={() => this.displayHistoricalData(this.state.clickCompanySymbol)}>Historical Data</a></li>\r\n                        </ul>\r\n                        </div>) : ('')}\r\n                </Grid>\r\n            </Grid>\r\n            {/** when select historical data at that time display table */}\r\n            {this.state.isSelectHistorical ? (<div>\r\n                <Paper>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell align=\"right\">Open</TableCell>\r\n                                <TableCell align=\"right\">High</TableCell>\r\n                                <TableCell align=\"right\">Low</TableCell>\r\n                                <TableCell align=\"right\">Close</TableCell>\r\n                                <TableCell align=\"right\">Adj Close</TableCell>\r\n                                <TableCell align=\"right\">Volume</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.historicalArray.map(historicalData => (\r\n                                <TableRow key={historicalData.date}>\r\n                                    <TableCell component=\"th\" scope=\"row\">{historicalData.date}</TableCell>\r\n                                    <TableCell align=\"right\">{historicalData.open}</TableCell>\r\n                                    <TableCell align=\"right\">{historicalData.high}</TableCell>\r\n                                    <TableCell align=\"right\">{historicalData.low}</TableCell>\r\n                                    <TableCell align=\"right\">{historicalData.close}</TableCell>\r\n                                    <TableCell align=\"right\">{historicalData.adjclose}</TableCell>\r\n                                    <TableCell align=\"right\">{historicalData.volume}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>) : (<div>{chartrender ? <div>{this.state.isIntervalValue ? <div>{this.displayGraphOfInterval()}</div> : <div>{this.state.isIndicatorGraph ? <div>{this.displayGraphOfIndicator()}</div> : <div>{this.state.isComparedCompany ? <div>{this.displayGraphOfComparison()}</div> : <div>{chartrender}</div>}</div>}</div>}</div>\r\n                : <div></div>}</div>)}</div>\r\n            : 'No data found')\r\n        /** display watchlist company list */\r\n        let displayCompany = this.state.companyData.length ? <div>{this.state.companyData.map(company =>\r\n            <List key={company.key} className=\"cursorClass\">\r\n                <ListItem onClick={() => this.displaySelectedCompanyGraph(company)}>\r\n                    <ListItemText primary={company.symbol} secondary={company.name} />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#a8a9b5 ' }} onClick={this.deleteCompany.bind(this, company.key)}>\r\n                            <RemoveCircle />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </List>\r\n        )} </div> : <div> <center><p>Add Comapany to watchlist</p></center></div>\r\n        /** dispaly graph or search list and no company added or search then dispaly 'no data found' */\r\n        let displayData = this.state.companyData.length ? <div>{showGraphOrSearchResult}</div> : <div><center><h2>No Company Found</h2></center></div>\r\n\r\n        /** when searchbar is open but not enter a value */\r\n        if (this.state.isOpenSearch && !this.state.isSearchClick) {\r\n            return (\r\n                <div>\r\n                    <div className=\"grid_class\">\r\n                        <div className=\"stock_header\">\r\n                        <Image src= {logo} alt=\"logo\" />\r\n                            {/* <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\r\n                            <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span> */}\r\n                        </div>\r\n                        <div className=\"logout\">\r\n                            <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\r\n                                Logout\r\n                            </Button></Link>\r\n                        </div>\r\n                    </div>\r\n                    {this.addComapny()}\r\n                    <div className=\"grid_class1\">\r\n                        <Grid container spacing={1}>\r\n                            <Grid item sm={3}>\r\n                                <div className=\"company_list\">\r\n                                    {/* <Grid container spacing={1}>\r\n                                        <Grid item sm={10}>\r\n                                            <p style={{ marginLeft: 18 }}>Manage WatchList</p>\r\n                                        </Grid>\r\n                                        <Grid item sm={2}>\r\n                                            <p onClick={() => this.openCompanyList()} style={{ color: '#3f51b5', cursor: 'pointer' }}>Done</p>\r\n                                        </Grid>\r\n                                    </Grid> */}\r\n                                    <div className=\"plus_class\">\r\n                                        <Grid container spacing={1}>\r\n                                            <Grid item sm={2}>\r\n                                                <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" className=\"addIcon\" onClick={() => this.openSearchbar()}>\r\n                                                    <AddIcon />\r\n                                                </IconButton>\r\n                                            </Grid>\r\n                                            <Grid item sm={10}>\r\n                                                <p className=\"watchlist_heading\">Manage WatchList</p>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                    \r\n                                    {this.state.companyData.map(company =>\r\n                                        <List key={company.key} className=\"vl\" >\r\n                                            <ListItem >\r\n                                                <ListItemText primary={company.symbol} secondary={company.name} />\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#a8a9b5' }} onClick={this.deleteCompany.bind(this, company.key)}>\r\n                                                        <RemoveCircle />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        </List>\r\n                                    )}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item sm={9} xs={12}>\r\n                                <div className=\"search_bar\">\r\n                                    <form onSubmit={this.submitSearchValue}>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item lg={10} md={9} xs={8}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                <TextField\r\n                                                    id=\"outlined-with-placeholder\"\r\n                                                    label=\"Search\"\r\n                                                    className=\"search_input\"\r\n                                                    value={this.state.value}\r\n                                                    onChange={this.getSearchValue}\r\n                                                    placeholder=\"Search here...\"\r\n                                                    InputLabelProps={{ shrink: true}}\r\n                                                    margin=\"normal\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item lg={2} md={3} xs={4}>\r\n                                                <Button className=\"search_button\" id=\"search\" type=\"submit\" onClick={this.submitSearchValue} style={{ color: '#fff' }} disabled={!this.state.value} autoFocus>\r\n                                                    Search\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </form>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            )\r\n            /** searchbar is open then it's return */\r\n        } else if (this.state.isSearchClick) {\r\n            if (!this.state.searchResponse.length) {\r\n                console.log(\"========else if ========if======\");\r\n                return (\r\n                    <div>\r\n                        <div className=\"grid_class\">\r\n                            <div className=\"stock_header\">\r\n                            <Image src= {logo} alt=\"logo\" />\r\n                                {/* <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\r\n                                <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span> */}\r\n                            </div>\r\n                            <div className=\"logout\">\r\n                                <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\r\n                                    <b>Logout</b>\r\n                                </Button></Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {this.addComapny()}\r\n                        <div className=\"grid_class1\">\r\n                            <Grid container spacing={1}>\r\n                            <Grid item sm={3}>\r\n                            <div className=\"company_list\">\r\n                                {/* <Grid container spacing={1}>\r\n                                    <Grid item sm={10}>\r\n                                        <p style={{ marginLeft: 18 }}>Manage Watchlist</p>\r\n                                    </Grid>\r\n                                    <Grid item sm={2}>\r\n                                        <p onClick={() => this.openCompanyList()} style={{ color: '#3f51b5' }}>Done</p>\r\n                                    </Grid>\r\n                                </Grid> */}\r\n                                <div className=\"plus_class\">\r\n                                        <Grid container spacing={1}>\r\n                                            <Grid item sm={2}>\r\n                                                <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" className=\"addIcon\" onClick={() => this.openSearchbar()}>\r\n                                                    <AddIcon />\r\n                                                </IconButton>\r\n                                            </Grid>\r\n                                            <Grid item sm={10}>\r\n                                                <p className=\"watchlist_heading\">Manage WatchList</p>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                {this.state.companyData.map(company =>\r\n                                    <List key={company.key} className=\"cursorClass vl\">\r\n                                        <ListItem onClick={() => this.displaySelectedCompanyGraph(company)}>\r\n                                            <ListItemText primary={company.symbol} secondary={company.name} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#a8a9b5' }} onClick={this.deleteCompany.bind(this, company.key)}>\r\n                                                    <RemoveCircle />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                    </List>\r\n                                )}\r\n                            </div>\r\n                            </Grid>\r\n                            <Grid item sm={9}>\r\n                                <div className=\"search_bar\">\r\n                                    <div className=\"searching_list\">\r\n                                        <div className=\"searchCompany_list\">\r\n                                            <p style={ {   margin: \"20px 0px\" } }>Showing Results for: <span style={{ textTransform: 'capitalize' }}><b>{this.state.searchValue}</b></span></p>\r\n                                            <p>No Data Found</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                            </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                console.log(\"else if =========else\");\r\n                return (\r\n                    <div>\r\n                        <div className=\"grid_class\">\r\n                            <div className=\"stock_header\">\r\n                            <Image src= {logo} alt=\"logo\" />\r\n                                {/* <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\r\n                                <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span> */}\r\n                            </div>\r\n                            <div className=\"logout\">\r\n                                <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\r\n                                    <b>Logout</b>\r\n                                </Button></Link>\r\n                            </div>\r\n                        </div>\r\n                        {this.addComapny()}\r\n                        <div className=\"grid_class1\">\r\n                            <Grid container spacing={1}>\r\n                                <Grid item sm={3}>\r\n                                    <div className=\"company_list\">\r\n                                        {/* <Grid container spacing={1}>\r\n                                            <Grid item sm={10}>\r\n                                                <p style={{ marginLeft: 18 }}>Manage Watchlist</p>\r\n                                            </Grid>\r\n                                            <Grid item sm={2}>\r\n                                                <p onClick={() => this.openCompanyList()} style={{ color: '#3f51b5', cursor: 'pointer' }}>Done</p>\r\n                                            </Grid>\r\n                                        </Grid> */}\r\n                                        <div className=\"plus_class\">\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid item sm={2}>\r\n                                                    <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" className=\"addIcon\" onClick={() => this.openSearchbar()}>\r\n                                                        <AddIcon />\r\n                                                    </IconButton>\r\n                                                </Grid>\r\n                                                <Grid item sm={10}>\r\n                                                    <p className=\"watchlist_heading\">Manage WatchList</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                        {this.state.companyData.map(company =>\r\n                                            <List key={company.key} >\r\n                                                <ListItem className=\"vl\">\r\n                                                    <ListItemText primary={company.symbol} secondary={company.name} />\r\n                                                    <ListItemSecondaryAction>\r\n                                                        <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#a8a9b5' }} onClick={this.deleteCompany.bind(this, company.key)}>\r\n                                                            <RemoveCircle />\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction>\r\n                                                </ListItem>\r\n                                            </List>\r\n                                        )}\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item sm={9} xs={12}>\r\n                                    <div className=\"search_bar\">\r\n                                        {/* <Typography variant=\"h6\" noWrap>\r\n                                            <TextField\r\n                                                id=\"outlined-with-placeholder\"\r\n                                                label=\"Search\"\r\n                                                className=\"search_input\"\r\n                                                value={this.state.value}\r\n                                                onChange={this.getSearchValue}\r\n                                                margin=\"normal\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                            <Button className=\"search_button\" id=\"search\" disabled={!this.state.value} onClick={this.submitSearchValue} style={{ color: '#fff' }} autoFocus>\r\n                                                Search\r\n\t\t\t\t\t\t\t\t\t        </Button>\r\n                                        </Typography> */}\r\n                                        <form onSubmit={this.submitSearchValue}>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item lg={10} md={9} xs={8}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                <TextField\r\n                                                    id=\"outlined-with-placeholder\"\r\n                                                    label=\"Search\"\r\n                                                    className=\"search_input\"\r\n                                                    value={this.state.value}\r\n                                                    onChange={this.getSearchValue}\r\n                                                    placeholder=\"Search here...\"\r\n                                                    InputLabelProps={{ shrink: true}}\r\n                                                    margin=\"normal\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item lg={2} md={3} xs={4}>\r\n                                                <Button className=\"search_button\" id=\"search\" type=\"submit\" onClick={this.submitSearchValue} style={{ color: '#fff' }} disabled={!this.state.value} autoFocus>\r\n                                                    Search\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </form>\r\n\r\n                                        <div className=\"searchCompany_list\">\r\n                                            <p style={ {   margin: \"20px 0px\" } }>Showing Results for: <span style={{ textTransform: 'capitalize' }}><b>{this.state.searchValue}</b></span></p>\r\n                                            <Row className=\"m-0\">\r\n                                                <Grid container spacing={3}>\r\n                                                {this.state.searchResponse.map(data =>\r\n                                                    <Grid item lg={3} md={4} sm={6} xs={12} style={ { width: '100%' } }>\r\n                                                        <List className=\"search_accordian\" key={data['1. symbol']} >\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={data['1. symbol']} secondary={data['2. name']} />\r\n                                                                    <ListItemSecondaryAction >\r\n                                                                        <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" onClick={() => this.addCompanytoWatchlist(data)} >\r\n                                                                            <AddIcon />\r\n                                                                        </IconButton>\r\n                                                                </ListItemSecondaryAction>\r\n                                                            </ListItem>\r\n                                                        </List>\r\n                                                    </Grid>\r\n                                                )}\r\n                                                </Grid>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            if (!this.state.isOpenCompanyList) {\r\n                console.log(\"=====else ==========if\");\r\n                return (\r\n                    <div>\r\n                        <div className=\"grid_class\">\r\n                            <div className=\"stock_header\">\r\n                            <Image src= {logo} alt=\"logo\" />\r\n                                {/* <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br /> */}\r\n                                {/* <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span> */}\r\n                            </div>\r\n                            <div className=\"logout\">\r\n                                <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\r\n                                    <b>Logout</b>\r\n                                </Button></Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid_class1\">\r\n                            <Grid container spacing={1}>\r\n                                <Grid item sm={3}>\r\n                                    <div className=\"company_list\">\r\n                                        <div className=\"plus_class\">\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid item sm={2}>\r\n                                                    <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" className=\"addIcon\" onClick={() => this.openSearchbar()}>\r\n                                                        <AddIcon />\r\n                                                    </IconButton>\r\n                                                </Grid>\r\n                                                <Grid item sm={10}>\r\n                                                    <p className=\"watchlist_heading\">Manage WatchList</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                        {displayCompany}\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item sm={9}>\r\n                                    <div className=\"graph_list\">\r\n                                        {displayData}\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /** get data of searching company */\r\n    getApiData() {\r\n        console.log(\"value:\", this.state.value);\r\n        const companySymbol = this.state.value;\r\n        API.getApiData(companySymbol)\r\n            .then((res) => {\r\n                try {\r\n                    console.log(\"resssssssss:\", res);\r\n                    console.log(\"data of response:\", res['bestMatches']);\r\n                    this.setState({\r\n                        searchResponse: res['bestMatches'],\r\n                        isSearchClick: true,\r\n                        isLoaded: true\r\n                    });\r\n                    if (!this.state.searchResponse.length) {\r\n                        console.log(\"searchrespone:\", this.state.searchResponse.length);\r\n                        console.log(\"===if callling===\");\r\n                        return (\r\n                            <div>\r\n                                \"No Data Found\"\r\n\t\t\t\t\t\t\t</div>\r\n                        )\r\n                    }\r\n                } catch (err) {\r\n                    swal('Internal Server Error');\r\n                }\r\n            }).catch((err) => {\r\n                swal('Internal Server Error');\r\n            })\r\n    }\r\n\r\n    /** get current date */\r\n    // getDate = () => {\r\n    //     let date = new Date().toDateString();\r\n    //     this.setState({ date });\r\n    // };\r\n\r\n\t/**\r\n\t * @param {string} id wise delete company from watchlist \r\n\t */\r\n    deleteCompany(id) {\r\n        firebase.firestore().collection('company').doc(id).delete().then(() => {\r\n            console.log(\"cdata:\", this.state.companyData);\r\n            swal(\"Successfully deleted!\", \"\", \"success\");\r\n            console.log(\"Document successfully deleted!\");\r\n            if (this.state.companyData.length === 1) {\r\n                window.location.reload();\r\n            }\r\n        }).catch((error) => {\r\n            swal('Internal Server Error');\r\n        });\r\n    }\r\n\r\n\t/**\r\n\t * @param {object} data wise display graph \r\n\t */\r\n    displaySelectedCompanyGraph(data) {\r\n        this.state.isSelectHistorical = false;\r\n        this.state.isIndicatorGraph = false;\r\n        this.state.isComparedCompany = false;\r\n        this.state.isSelectinterval = false;\r\n        this.state.isIntervalValue = false;\r\n        this.setState({\r\n            isLoaded: false, isSelectinterval: false, isSelectHistorical: false, isComparedCompany: false, isIndicatorGraph: false\r\n        })\r\n        console.log('data: ', data);\r\n        let grapharray = [];\r\n        const companySymbol = data.symbol;\r\n        API.displaySelectedCompanyGraph(companySymbol)\r\n            .then((res) => {\r\n                try {\r\n                    const error = res['Error Message']\r\n                    if (res) {\r\n                        const originalObject = res['Time Series (5min)'];\r\n                        if (originalObject) {\r\n                            for (let key in originalObject) {\r\n                                grapharray.push({\r\n                                    date: key,\r\n                                    open: originalObject[key]['1. open'],\r\n                                    high: originalObject[key]['2. high'],\r\n                                    low: originalObject[key]['3. low'],\r\n                                    close: originalObject[key]['4. close'],\r\n                                    volume: originalObject[key]['5. volume']\r\n                                })\r\n                            }\r\n                            this.setState({\r\n                                grapharray: grapharray,\r\n                                open: grapharray['0'].open,\r\n                                close: grapharray['0'].close,\r\n                                high: grapharray['0'].high,\r\n                                low: grapharray['0'].low,\r\n                                volume: grapharray['0'].volume,\r\n                                clickCompanyName: data.name,\r\n                                clickCompanySymbol: data.symbol,\r\n                                isLoaded: true,\r\n                                isGraphDisplay: true\r\n                            })\r\n                            console.log(\"isGraphDisplay after======>\", this.state.isGraphDisplay);\r\n                        } else if (error) {\r\n                            setTimeout(this.setState({ isLoaded: true }), 3000);\r\n                            if (error === 'Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.') {\r\n                                swal('There is no data found!');\r\n                            } else {\r\n                                swal('Internal Server Error')\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    swal('Internal Server Error ');\r\n                }\r\n            }).catch((err) => {\r\n                swal('Internal Server Error')\r\n            })\r\n    }\r\n\r\n    /** logout and clear localstorage */\r\n    logOut = () => {\r\n        firebase\r\n            .auth()\r\n            .signOut().then(function () {\r\n                console.log('Signed Out');\r\n                localStorage.clear();\r\n                localStorage.removeItem('email1');\r\n                console.log(localStorage);\r\n                history.push('/')\r\n            }, function (error) {\r\n                swal('Internal Server Error');\r\n            });\r\n    }\r\n\r\n    /** open searchbar onclick of plus sign */\r\n    openSearchbar() {\r\n        this.setState({\r\n            isOpenSearch: true\r\n        });\r\n    }\r\n\r\n    /** display watchlist onclick of done */\r\n    openCompanyList() {\r\n        this.setState({ isOpenCompanyList: false })\r\n        console.log(\"isOpenCompanyList:\", this.state.isOpenCompanyList);\r\n        history.push('/Watch-list')\r\n    }\r\n\r\n    /** get current user added company from database */\r\n    getCompany() {\r\n        let companyData = [];\r\n        localStorage.getItem('email1')\r\n        let email = localStorage.email1;\r\n        console.log('email==========>', email);\r\n        firebase.firestore().collection(\"company\").where(\"email\", \"==\", email)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    const { name, symbol } = doc.data();\r\n                    companyData.push({\r\n                        key: doc.id,\r\n                        doc,\r\n                        name,\r\n                        symbol,\r\n                    });\r\n                });\r\n                setLoader(true);\r\n                if (companyData.length) {\r\n                    console.log('found data==========>', companyData);\r\n                    setTheState(companyData);\r\n                    console.log(\"call\");\r\n                    displayGraph()\r\n                } else {\r\n                    return (\r\n                        <div>\r\n                            <p>No data found</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\r\n        let setLoader = (isLoaded) => {\r\n            this.setState({\r\n                isLoaded: isLoaded\r\n            })\r\n        }\r\n\r\n        let setTheState = (companyData) => {\r\n            this.setState({\r\n                companyData: companyData,\r\n                isLoaded: true\r\n            })\r\n        }\r\n        let displayGraph = () => {\r\n            console.log(\"companyData before:\", this.state.companyData);\r\n            console.log(\"companyData:\", this.state.companyData);\r\n            let firstCompanySymbol = this.state.companyData[0];\r\n            console.log(\"firstCompanySymbol\", firstCompanySymbol);\r\n            this.displaySelectedCompanyGraph(firstCompanySymbol)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isLoaded } = this.state;\r\n        if (!isLoaded) {\r\n            return (\r\n                <center>\r\n                    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                </center>\r\n            )\r\n        } else if (isLoaded) {\r\n            return (\r\n                <div className=\"main\">\r\n                    {this.displayCompanyList()}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h2>Sorry no data found</h2>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Companylist\r\n\r\n"]},"metadata":{},"sourceType":"module"}