{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\stock_viewer\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport '../components/login.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport history from '../History';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport logo from './logo.jpg';\nimport login_image from './bgimage.jpg';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onCollectionUpdate = querySnapshot => {\n      const user = [];\n      querySnapshot.forEach(doc => {\n        const _doc$data = doc.data(),\n              email = _doc$data.email,\n              password = _doc$data.password;\n\n        user.push({\n          key: doc.id,\n          doc,\n          email,\n          password\n        });\n      });\n      this.setState({\n        user\n      });\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.signInWithEmailAndPassword = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      console.log(email);\n      console.log(password);\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        this.setState({\n          loginUser: email\n        });\n        localStorage.setItem('email1', email);\n        console.log(\"login sucessfully\");\n        history.push('/Company-list'); // window.location.hash = '/Company-list'\n      }).catch(error => {\n        console.log('hey error: ', error);\n\n        if (error.code === \"auth/user-not-found\") {\n          swal(\"Email not found\", \"Please, Signup\", \"error\");\n        } else if (error.code === \" auth/wrong-password\") {\n          swal(\"Please Enter correct password\", \"\", \"error\");\n        } else {\n          swal(\"Internal Server Error\");\n        }\n      });\n    };\n\n    this.ref = firebase.firestore().collection('users');\n    this.state = {\n      email: '',\n      password: '',\n      user: [],\n      array: [],\n      hidden: true,\n      loginUser: ''\n    };\n    this.toggleShow = this.toggleShow.bind(this);\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n  /**hide or show password field value */\n\n\n  toggleShow() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return (// <div>\n      //   <div className=\"backgroung_class\">\n      //     <div className=\"main_class\">\n      //       <h1 className=\"text-center\">Stock Login</h1>\n      //       <form onSubmit={(event) => this.signInWithEmailAndPassword(event)}>\n      //       <Grid container spacing={1} xs={12}>\n      //         <Grid item sm={12} xs={12}>\n      //           <TextField\n      //             id=\"outlined-email-input\"\n      //             label=\"Email\"\n      //             type=\"email\"\n      //             name=\"email\"\n      //             autoComplete=\"email\"\n      //             margin=\"normal\"\n      //             variant=\"outlined\"\n      //             value={email}\n      //             onChange={this.handleInputChange}\n      //           />\n      //         </Grid>\n      //         <Grid item sm={12} xs={12}>\n      //           <TextField\n      //             id=\"outlined-password-input\"\n      //             label=\"Password\"\n      //             type={this.state.hidden ? \"password\" : \"text\"}\n      //             name=\"password\"\n      //             autoComplete=\"current-password\"\n      //             margin=\"normal\"\n      //             variant=\"outlined\"\n      //             value={password}\n      //             onChange={this.handleInputChange}\n      //             InputProps={{\n      //               endAdornment: (\n      //                 <InputAdornment position=\"end\">\n      //                   <IconButton\n      //                     edge=\"end\"\n      //                     aria-label=\"Toggle password visibility\"\n      //                     onClick={this.toggleShow}\n      //                   >\n      //                     {password ? <VisibilityOff /> : <Visibility />}\n      //                   </IconButton>\n      //                 </InputAdornment>\n      //               ),\n      //             }}\n      //           />\n      //         </Grid>\n      //         <Grid item sm={12} xs={12}>\n      //           <Button type=\"submit\" color=\"primary\" disabled={!this.state.email || !this.state.password} variant=\"contained\" size=\"large\" onClick={(event) => this.signInWithEmailAndPassword(event)}>\n      //             Login\n      //          </Button>\n      //         </Grid>\n      //         <Grid item sm={12}>\n      //           <Divider />\n      //           <div className=\"text-center\">\n      //             New User? <Button color=\"primary\"><Link to=\"/sign-up\">Sign Up</Link></Button>\n      //           </div>\n      //         </Grid>\n      //       </Grid>\n      //       </form>\n      //     </div>\n      //   </div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"login_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 5,\n        md: 12,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main_class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: logo,\n        alt: \"signup page image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Stock Login\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Welcome Back, Please login to your account\"), React.createElement(\"form\", {\n        className: \"form_signup\",\n        onSubmit: event => this.signInWithEmailAndPassword(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login_email_field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-email-input\",\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: email,\n        onChange: this.onChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login_password_field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: this.state.hidden ? \"password\" : \"text\",\n        name: \"password\",\n        autoComplete: \"current-password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"submit\",\n        className: \"signup_btn\",\n        variant: \"contained\",\n        size: \"large\",\n        disabled: !this.state.email || !this.state.password,\n        variant: \"contained\",\n        size: \"large\",\n        onClick: event => this.signInWithEmailAndPassword(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Login\")), React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"login_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/sign-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Sign up\"))))))), React.createElement(Col, {\n        lg: 7,\n        md: 12,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login_img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: login_image,\n        alt: \"signup page image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })))))\n    );\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\stock_viewer\\src\\components\\Login.js"],"names":["React","Component","firebase","TextField","Button","Grid","Divider","Link","swal","IconButton","InputAdornment","Visibility","VisibilityOff","history","Row","Col","Image","logo","login_image","Login","constructor","onCollectionUpdate","querySnapshot","user","forEach","doc","data","email","password","push","key","id","setState","handleInputChange","event","target","name","value","signInWithEmailAndPassword","preventDefault","state","console","log","auth","then","loginUser","localStorage","setItem","catch","error","code","ref","firestore","collection","array","hidden","toggleShow","bind","componentDidMount","unsubscribe","onSnapshot","render","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,yBAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAA+B,iBAA/B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,KAAN,SAAoBlB,SAApB,CAA8B;AAC5BmB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,kBAdc,GAcQC,aAAD,IAAmB;AACtC,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAAA,0BACDA,GAAG,CAACC,IAAJ,EADC;AAAA,cACrBC,KADqB,aACrBA,KADqB;AAAA,cACdC,QADc,aACdA,QADc;;AAE7BL,QAAAA,IAAI,CAACM,IAAL,CAAU;AACRC,UAAAA,GAAG,EAAEL,GAAG,CAACM,EADD;AAERN,UAAAA,GAFQ;AAGRE,UAAAA,KAHQ;AAIRC,UAAAA;AAJQ,SAAV;AAMD,OARD;AASA,WAAKI,QAAL,CAAc;AACZT,QAAAA;AADY,OAAd;AAGD,KA5Ba;;AAAA,SAuCdU,iBAvCc,GAuCOC,KAAD,IAAW;AAC7B,WAAKF,QAAL,CAAc;AAAE,SAACE,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAApC,OAAd;AACD,KAzCa;;AAAA,SA4CdC,0BA5Cc,GA4CgBJ,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACK,cAAN;AADsC,0BAEV,KAAKC,KAFK;AAAA,YAE9Bb,KAF8B,eAE9BA,KAF8B;AAAA,YAEvBC,QAFuB,eAEvBA,QAFuB;AAGtCa,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACA1B,MAAAA,QAAQ,CACLyC,IADH,GAEGL,0BAFH,CAE8BX,KAF9B,EAEqCC,QAFrC,EAE+CgB,IAF/C,CAEoD,MAAM;AACtD,aAAKZ,QAAL,CAAc;AAAEa,UAAAA,SAAS,EAAElB;AAAb,SAAd;AACAmB,QAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BpB,KAA/B;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA7B,QAAAA,OAAO,CAACgB,IAAR,CAAa,eAAb,EAJsD,CAKtD;AACD,OARH,EAQKmB,KARL,CAQYC,KAAD,IAAW;AAClBR,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BO,KAA3B;;AACA,YAAIA,KAAK,CAACC,IAAN,KAAe,qBAAnB,EAA0C;AACxC1C,UAAAA,IAAI,CAAC,iBAAD,EAAoB,gBAApB,EAAsC,OAAtC,CAAJ;AACD,SAFD,MAEO,IAAIyC,KAAK,CAACC,IAAN,KAAe,sBAAnB,EAA2C;AAChD1C,UAAAA,IAAI,CAAC,+BAAD,EAAkC,EAAlC,EAAsC,OAAtC,CAAJ;AACD,SAFM,MAEA;AACLA,UAAAA,IAAI,CAAC,uBAAD,CAAJ;AACD;AACF,OAjBH;AAkBD,KAnEa;;AAEZ,SAAK2C,GAAL,GAAWjD,QAAQ,CAACkD,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAX;AACA,SAAKb,KAAL,GAAa;AACXb,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXL,MAAAA,IAAI,EAAE,EAHK;AAIX+B,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,MAAM,EAAE,IALG;AAMXV,MAAAA,SAAS,EAAE;AANA,KAAb;AAQA,SAAKW,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAkBDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL,GAAmB,KAAKR,GAAL,CAASS,UAAT,CAAoB,KAAKvC,kBAAzB,CAAnB;AACD;AAED;;;AACAmC,EAAAA,UAAU,GAAG;AACX,SAAKxB,QAAL,CAAc;AAAEuB,MAAAA,MAAM,EAAE,CAAC,KAAKf,KAAL,CAAWe;AAAtB,KAAd;AACD;;AAgCDM,EAAAA,MAAM,GAAG;AAAA,yBACqB,KAAKrB,KAD1B;AAAA,UACCb,KADD,gBACCA,KADD;AAAA,UACQC,QADR,gBACQA,QADR;AAEP,WACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,EAAhB;AAAoB,QAAA,SAAS,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAGX,IAAb;AAAmB,QAAA,GAAG,EAAC,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAHF,EAIE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAGiB,KAAD,IAAW,KAAKI,0BAAL,CAAgCJ,KAAhC,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,sBADL;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,YAAY,EAAC,OALf;AAME,QAAA,MAAM,EAAC,QANT;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,KAAK,EAAEP,KART;AASE,QAAA,QAAQ,EAAE,KAAKmC,QATjB;AAUE,QAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADJ,EAgBI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,yBADL;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWe,MAAX,GAAoB,UAApB,GAAiC,MAHzC;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,YAAY,EAAC,kBALf;AAME,QAAA,MAAM,EAAC,QANT;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,KAAK,EAAE3B,QART;AASE,QAAA,QAAQ,EAAE,KAAKkC,QATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAhBJ,CAJF,EAoCE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,EAA/B;AAAmC,QAAA,EAAE,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,0CACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAC,WAArD;AAAiE,QAAA,IAAI,EAAC,OAAtE;AAA8E,QAAA,QAAQ,EAAE,CAAC,KAAKtB,KAAL,CAAWb,KAAZ,IAAqB,CAAC,KAAKa,KAAL,CAAWZ,QAAzH;AAAmI,QAAA,OAAO,EAAC,WAA3I;AAAuJ,QAAA,IAAI,EAAC,OAA5J;AAAoK,QAAA,OAAO,EAAGM,KAAD,IAAW,KAAKI,0BAAL,CAAgCJ,KAAhC,CAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAME,0CACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA9B,CADF,CANF,CADF,CApCF,CADF,CADF,EAqDE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,EAAhB;AAAoB,QAAA,SAAS,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAGhB,WAAb;AAA0B,QAAA,GAAG,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CArDF,CADJ;AA/DF;AA6HD;;AArM2B;;AAwM9B,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from '../Firebase';\r\nimport '../components/login.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport history from '../History';\r\nimport { Row, Col, Image} from 'react-bootstrap';\r\nimport logo from './logo.jpg';\r\nimport login_image from './bgimage.jpg';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.ref = firebase.firestore().collection('users');\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      user: [],\r\n      array: [],\r\n      hidden: true,\r\n      loginUser: ''\r\n    };\r\n    this.toggleShow = this.toggleShow.bind(this);\r\n  }\r\n\r\n  onCollectionUpdate = (querySnapshot) => {\r\n    const user = [];\r\n    querySnapshot.forEach((doc) => {\r\n      const { email, password } = doc.data();\r\n      user.push({\r\n        key: doc.id,\r\n        doc,\r\n        email,\r\n        password,\r\n      });\r\n    });\r\n    this.setState({\r\n      user\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n  }\r\n\r\n  /**hide or show password field value */\r\n  toggleShow() {\r\n    this.setState({ hidden: !this.state.hidden });\r\n  }\r\n \r\n  handleInputChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  /**sign in with email and password */\r\n  signInWithEmailAndPassword = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    console.log(email);\r\n    console.log(password);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password).then(() => {\r\n        this.setState({ loginUser: email })\r\n        localStorage.setItem('email1', email);\r\n        console.log(\"login sucessfully\");\r\n        history.push('/Company-list')\r\n        // window.location.hash = '/Company-list'\r\n      }).catch((error) => {\r\n        console.log('hey error: ', error);\r\n        if (error.code === \"auth/user-not-found\") {\r\n          swal(\"Email not found\", \"Please, Signup\", \"error\");\r\n        } else if (error.code === \" auth/wrong-password\") {\r\n          swal(\"Please Enter correct password\", \"\", \"error\");\r\n        } else {\r\n          swal(\"Internal Server Error\");\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    return (\r\n      // <div>\r\n      //   <div className=\"backgroung_class\">\r\n      //     <div className=\"main_class\">\r\n      //       <h1 className=\"text-center\">Stock Login</h1>\r\n      //       <form onSubmit={(event) => this.signInWithEmailAndPassword(event)}>\r\n      //       <Grid container spacing={1} xs={12}>\r\n      //         <Grid item sm={12} xs={12}>\r\n      //           <TextField\r\n      //             id=\"outlined-email-input\"\r\n      //             label=\"Email\"\r\n      //             type=\"email\"\r\n      //             name=\"email\"\r\n      //             autoComplete=\"email\"\r\n      //             margin=\"normal\"\r\n      //             variant=\"outlined\"\r\n      //             value={email}\r\n      //             onChange={this.handleInputChange}\r\n      //           />\r\n      //         </Grid>\r\n      //         <Grid item sm={12} xs={12}>\r\n      //           <TextField\r\n      //             id=\"outlined-password-input\"\r\n      //             label=\"Password\"\r\n      //             type={this.state.hidden ? \"password\" : \"text\"}\r\n      //             name=\"password\"\r\n      //             autoComplete=\"current-password\"\r\n      //             margin=\"normal\"\r\n      //             variant=\"outlined\"\r\n      //             value={password}\r\n      //             onChange={this.handleInputChange}\r\n      //             InputProps={{\r\n      //               endAdornment: (\r\n      //                 <InputAdornment position=\"end\">\r\n      //                   <IconButton\r\n      //                     edge=\"end\"\r\n      //                     aria-label=\"Toggle password visibility\"\r\n      //                     onClick={this.toggleShow}\r\n      //                   >\r\n      //                     {password ? <VisibilityOff /> : <Visibility />}\r\n      //                   </IconButton>\r\n      //                 </InputAdornment>\r\n      //               ),\r\n      //             }}\r\n      //           />\r\n      //         </Grid>\r\n      //         <Grid item sm={12} xs={12}>\r\n      //           <Button type=\"submit\" color=\"primary\" disabled={!this.state.email || !this.state.password} variant=\"contained\" size=\"large\" onClick={(event) => this.signInWithEmailAndPassword(event)}>\r\n      //             Login\r\n      //          </Button>\r\n      //         </Grid>\r\n      //         <Grid item sm={12}>\r\n      //           <Divider />\r\n      //           <div className=\"text-center\">\r\n      //             New User? <Button color=\"primary\"><Link to=\"/sign-up\">Sign Up</Link></Button>\r\n      //           </div>\r\n      //         </Grid>\r\n      //       </Grid>\r\n      //       </form>\r\n      //     </div>\r\n      //   </div>\r\n      // </div>\r\n\r\n      <div className=\"login_form\">\r\n          <Row>\r\n            <Col lg={5} md={12} className=\"p-0\">\r\n              <div className=\"main_class\">\r\n                <Image src= {logo} alt=\"signup page image\" />\r\n                <h1>Stock Login</h1>\r\n                <p>Welcome Back, Please login to your account</p>\r\n                <form className=\"form_signup\" onSubmit={(event) => this.signInWithEmailAndPassword(event)}>\r\n                    <Grid item sm={12} xs={12}>\r\n                      <div className=\"login_email_field\">\r\n                        <TextField\r\n                          id=\"outlined-email-input\"\r\n                          label=\"Email\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          autoComplete=\"email\"\r\n                          margin=\"normal\"\r\n                          variant=\"outlined\"\r\n                          value={email}\r\n                          onChange={this.onChange}\r\n                          required/>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                      <div className=\"login_password_field\">\r\n                        <TextField\r\n                          id=\"outlined-password-input\"\r\n                          label=\"Password\"\r\n                          type={this.state.hidden ? \"password\" : \"text\"}\r\n                          name=\"password\"\r\n                          autoComplete=\"current-password\"\r\n                          margin=\"normal\"\r\n                          variant=\"outlined\"\r\n                          value={password}\r\n                          onChange={this.onChange}\r\n                          />\r\n                        </div>\r\n                    </Grid>\r\n                </form>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <Row>\r\n                    <>\r\n                      <Button type=\"submit\" className=\"signup_btn\" variant=\"contained\" size=\"large\" disabled={!this.state.email || !this.state.password} variant=\"contained\" size=\"large\" onClick={(event) => this.signInWithEmailAndPassword(event)}>\r\n                        Login\r\n                      </Button>\r\n                    </>\r\n                    <>\r\n                      <Button className=\"login_btn\"><Link to=\"/sign-up\">Sign up</Link></Button>\r\n                    </>\r\n                  </Row>\r\n                </Grid>\r\n              </div>\r\n            </Col>\r\n            \r\n            <Col lg={7} md={12} className=\"p-0\">\r\n              <div className=\"login_img\">\r\n                <Image src= {login_image} alt=\"signup page image\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}