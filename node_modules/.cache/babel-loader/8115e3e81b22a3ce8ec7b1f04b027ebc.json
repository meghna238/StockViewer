{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\stock_viewer\\\\src\\\\components\\\\Sign-up.js\";\nimport React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport './login.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Container } from '@material-ui/core';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport sign_up_image from './sign_up.jpg';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      const state = this.state;\n      state[e.target.name] = e.target.value;\n      this.setState(state);\n      console.log(\"state=============?\", this.state.username);\n    };\n\n    this.signUp = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password,\n            username = _this$state.username;\n      console.log('users: ', email, password, username);\n\n      if (!username) {\n        swal(\"Username is required\", \"\", \"error\");\n        return;\n      }\n\n      this.ref.add({\n        email,\n        password,\n        username,\n        createdAt: Date.now(),\n        isDeleted: false,\n        updatedAt: Date.now(),\n        company: []\n      }).then(docRef => {\n        this.setState({\n          email: '',\n          password: '',\n          username: ''\n        });\n        console.log(\"name-=============>\", this.state.username);\n      }).catch(error => {\n        console.error(\"Error adding document: \", error);\n      });\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(u => {\n        console.log(\"u:\", u);\n\n        if (!this.state.username) {\n          swal(\"Please, Enter Username\", \"\", \"error\");\n        }\n\n        console.log(\"props:::::::::::\", this.props);\n        swal(\"Signup sucessfully\", \"\", \"success\");\n        this.props.history.push(\"/login\");\n      }).catch(error => {\n        console.log(\"error===========>\", error);\n\n        if (error.code === \"auth/weak-password\") {\n          swal(\"Enter Strong Password\", \"Password should be at least 6 characters\", \"error\");\n        } else if (error.code === \"auth/email-already-in-use\") {\n          swal(\"Email already registerd\", \"\", \"error\");\n        } else if (error.code === \"auth/invalid-email\") {\n          swal(\"Enter valid Email\", \"\", \"error\");\n        } else if (error.code === \"Cannot read property 'users' of undefined\") {\n          swal(\"Please, Enter Username\", \"\", \"error\");\n        } else {\n          swal(\"Internal Server Error\", \"\", \"error\");\n        }\n      });\n    };\n\n    this.ref = firebase.firestore().collection('users');\n    this.state = {\n      email: '',\n      password: '',\n      username: '',\n      createdAt: '',\n      hidden: true\n    };\n    this.toggleShow = this.toggleShow.bind(this);\n  }\n\n  /**show or hide password field value */\n  toggleShow() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n  /**signUp and add data to databse */\n\n\n  /**username and password validation */\n  isDisabled() {\n    if (!this.state.username || !this.state.password || !(this.state.password.length >= '6')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          username = _this$state2.username;\n    return (// <div>\n      //   <div className=\"backgroung_class\">\n      //     <div className=\"main_class \">\n      //       <h1 className=\"text-center\">Stock Signup</h1>\n      //       <form onSubmit={(e) => this.signUp(e)}>\n      //         <Grid container spacing={1} xs={12}>\n      //           <Grid item sm={12} xs={12}>\n      //             <TextField\n      //               id=\"outlined-user-input\"\n      //               label=\"Username\"\n      //               type=\"text\"\n      //               name=\"username\"\n      //               margin=\"normal\"\n      //               variant=\"outlined\"\n      //               value={username}\n      //               required\n      //               onChange={this.onChange}/>\n      //           </Grid>\n      //           <Grid item sm={12} xs={12}>\n      //             <TextField\n      //               id=\"outlined-email-input\"\n      //               label=\"Email\"\n      //               type=\"email\"\n      //               name=\"email\"\n      //               autoComplete=\"email\"\n      //               margin=\"normal\"\n      //               variant=\"outlined\"\n      //               value={email}\n      //               onChange={this.onChange}\n      //               required/>\n      //           </Grid>\n      //           <Grid item sm={12} xs={12}>\n      //             <TextField\n      //               id=\"outlined-password-input\"\n      //               label=\"Password\"\n      //               type={this.state.hidden ? \"password\" : \"text\"}\n      //               name=\"password\"\n      //               autoComplete=\"current-password\"\n      //               margin=\"normal\"\n      //               variant=\"outlined\"\n      //               value={password}\n      //               onChange={this.onChange}\n      //               InputProps={{\n      //                 endAdornment: (\n      //                   <InputAdornment position=\"end\">\n      //                     <IconButton\n      //                       edge=\"end\"\n      //                       aria-label=\"Toggle password visibility\"\n      //                       onClick={this.toggleShow}>\n      //                       {password ? <VisibilityOff /> : <Visibility />}\n      //                     </IconButton>\n      //                   </InputAdornment>\n      //                 ),\n      //               }}\n      //             />\n      //           </Grid>\n      //           <Grid item sm={12} xs={12}>\n      //             <Button color=\"primary\" type=\"submit\" disabled={this.isDisabled()} variant=\"contained\" size=\"large\" onClick={(e) => this.signUp(e)}>\n      //               SignUp\n      //             </Button>\n      //           </Grid>\n      //           <Divider />\n      //           <Grid item sm={12}>\n      //             <div className=\"text-center\">\n      //               Already Registered? <Button color=\"primary\"><Link to=\"/login\">Login</Link></Button>\n      //             </div>\n      //           </Grid>\n      //         </Grid>\n      //       </form>\n      //     </div>\n      //   </div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"signup_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: logo,\n        alt: \"signup page image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Col, {\n        lg: 5,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main_class \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Stock Signup\"), React.createElement(\"form\", {\n        onSubmit: e => this.signUp(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-user-input\",\n        label: \"Username\",\n        type: \"text\",\n        name: \"username\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: username,\n        required: true,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-email-input\",\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: email,\n        onChange: this.onChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: this.state.hidden ? \"password\" : \"text\",\n        name: \"password\",\n        autoComplete: \"current-password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: password,\n        onChange: this.onChange,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.toggleShow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, password ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: this.isDisabled(),\n        variant: \"contained\",\n        size: \"large\",\n        onClick: e => this.signUp(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"SignUp\")), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Already Registered? \", React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Login\")))))))), React.createElement(Col, {\n        lg: 7,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"signup_img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: sign_up_image,\n        alt: \"signup page image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })))))\n    );\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\stock_viewer\\src\\components\\Sign-up.js"],"names":["React","Component","firebase","TextField","Button","Grid","Divider","Link","swal","IconButton","InputAdornment","Visibility","VisibilityOff","Container","Row","Col","Image","sign_up_image","SignUp","constructor","onChange","e","state","target","name","value","setState","console","log","username","signUp","preventDefault","email","password","ref","add","createdAt","Date","now","isDeleted","updatedAt","company","then","docRef","catch","error","auth","createUserWithEmailAndPassword","u","props","history","push","code","firestore","collection","hidden","toggleShow","bind","isDisabled","length","render","logo","endAdornment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from '../Firebase';\r\nimport './login.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { Container } from '@material-ui/core';\r\nimport { Row, Col, Image} from 'react-bootstrap';\r\nimport sign_up_image from './sign_up.jpg';\r\n\r\nclass SignUp extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ref = firebase.firestore().collection('users');\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n      createdAt: '',\r\n      hidden: true,\r\n    };\r\n    this.toggleShow = this.toggleShow.bind(this);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n    console.log(\"state=============?\", this.state.username);\r\n  }\r\n\r\n  /**show or hide password field value */\r\n  toggleShow() {\r\n    this.setState({ hidden: !this.state.hidden });\r\n  }\r\n\r\n  /**signUp and add data to databse */\r\n  signUp = (e) => {\r\n    e.preventDefault();\r\n    const { email, password, username } = this.state;\r\n    console.log('users: ', email, password, username);\r\n    if (!username) {\r\n      swal(\"Username is required\", \"\", \"error\");\r\n      return;\r\n    }\r\n    this.ref.add({\r\n      email,\r\n      password,\r\n      username,\r\n      createdAt: Date.now(),\r\n      isDeleted: false,\r\n      updatedAt: Date.now(),\r\n      company: []\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        email: '',\r\n        password: '',\r\n        username: ''\r\n      });\r\n      console.log(\"name-=============>\", this.state.username);\r\n    })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password).then((u) => {\r\n        console.log(\"u:\", u)\r\n        if (!this.state.username) {\r\n          swal(\"Please, Enter Username\", \"\", \"error\");\r\n        }\r\n        console.log(\"props:::::::::::\", this.props)\r\n        swal(\"Signup sucessfully\", \"\", \"success\");\r\n        this.props.history.push(\"/login\");\r\n      }).catch((error) => {\r\n        console.log(\"error===========>\", error);\r\n        if (error.code === \"auth/weak-password\") {\r\n          swal(\"Enter Strong Password\", \"Password should be at least 6 characters\", \"error\");\r\n        } else if (error.code === \"auth/email-already-in-use\") {\r\n          swal(\"Email already registerd\", \"\", \"error\");\r\n        } else if (error.code === \"auth/invalid-email\") {\r\n          swal(\"Enter valid Email\", \"\", \"error\");\r\n        } else if (error.code === \"Cannot read property 'users' of undefined\") {\r\n          swal(\"Please, Enter Username\", \"\", \"error\");\r\n        } else {\r\n          swal(\"Internal Server Error\", \"\", \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  /**username and password validation */\r\n  isDisabled() {\r\n    if (!this.state.username || !this.state.password || !(this.state.password.length >= '6')) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { email, password, username } = this.state;\r\n    return (\r\n      // <div>\r\n      //   <div className=\"backgroung_class\">\r\n      //     <div className=\"main_class \">\r\n      //       <h1 className=\"text-center\">Stock Signup</h1>\r\n      //       <form onSubmit={(e) => this.signUp(e)}>\r\n      //         <Grid container spacing={1} xs={12}>\r\n      //           <Grid item sm={12} xs={12}>\r\n      //             <TextField\r\n      //               id=\"outlined-user-input\"\r\n      //               label=\"Username\"\r\n      //               type=\"text\"\r\n      //               name=\"username\"\r\n      //               margin=\"normal\"\r\n      //               variant=\"outlined\"\r\n      //               value={username}\r\n      //               required\r\n      //               onChange={this.onChange}/>\r\n      //           </Grid>\r\n      //           <Grid item sm={12} xs={12}>\r\n      //             <TextField\r\n      //               id=\"outlined-email-input\"\r\n      //               label=\"Email\"\r\n      //               type=\"email\"\r\n      //               name=\"email\"\r\n      //               autoComplete=\"email\"\r\n      //               margin=\"normal\"\r\n      //               variant=\"outlined\"\r\n      //               value={email}\r\n      //               onChange={this.onChange}\r\n      //               required/>\r\n      //           </Grid>\r\n      //           <Grid item sm={12} xs={12}>\r\n      //             <TextField\r\n      //               id=\"outlined-password-input\"\r\n      //               label=\"Password\"\r\n      //               type={this.state.hidden ? \"password\" : \"text\"}\r\n      //               name=\"password\"\r\n      //               autoComplete=\"current-password\"\r\n      //               margin=\"normal\"\r\n      //               variant=\"outlined\"\r\n      //               value={password}\r\n      //               onChange={this.onChange}\r\n      //               InputProps={{\r\n      //                 endAdornment: (\r\n      //                   <InputAdornment position=\"end\">\r\n      //                     <IconButton\r\n      //                       edge=\"end\"\r\n      //                       aria-label=\"Toggle password visibility\"\r\n      //                       onClick={this.toggleShow}>\r\n      //                       {password ? <VisibilityOff /> : <Visibility />}\r\n      //                     </IconButton>\r\n      //                   </InputAdornment>\r\n      //                 ),\r\n      //               }}\r\n      //             />\r\n      //           </Grid>\r\n      //           <Grid item sm={12} xs={12}>\r\n      //             <Button color=\"primary\" type=\"submit\" disabled={this.isDisabled()} variant=\"contained\" size=\"large\" onClick={(e) => this.signUp(e)}>\r\n      //               SignUp\r\n      //             </Button>\r\n      //           </Grid>\r\n      //           <Divider />\r\n      //           <Grid item sm={12}>\r\n      //             <div className=\"text-center\">\r\n      //               Already Registered? <Button color=\"primary\"><Link to=\"/login\">Login</Link></Button>\r\n      //             </div>\r\n      //           </Grid>\r\n      //         </Grid>\r\n      //       </form>\r\n      //     </div>\r\n      //   </div>\r\n      // </div>\r\n      <div className=\"signup_form\">\r\n          <Row>\r\n          <Image src= {logo} alt=\"signup page image\" />\r\n            <Col lg={5} className=\"p-0\">\r\n            <div className=\"main_class \">\r\n             <h1>Stock Signup</h1>\r\n             <form onSubmit={(e) => this.signUp(e)}>\r\n               <Grid container spacing={1} xs={12}>\r\n                 <Grid item sm={12} xs={12}>\r\n                   <TextField\r\n                    id=\"outlined-user-input\"\r\n                    label=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={username}\r\n                    required\r\n                    onChange={this.onChange}/>\r\n                </Grid>\r\n                <Grid item sm={12} xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    required/>\r\n                </Grid>\r\n                 <Grid item sm={12} xs={12}>\r\n                   <TextField\r\n                    id=\"outlined-password-input\"\r\n                    label=\"Password\"\r\n                    type={this.state.hidden ? \"password\" : \"text\"}\r\n                    name=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={password}\r\n                    onChange={this.onChange}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"Toggle password visibility\"\r\n                            onClick={this.toggleShow}>\r\n                            {password ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12} xs={12}>\r\n                  <Button color=\"primary\" type=\"submit\" disabled={this.isDisabled()} variant=\"contained\" size=\"large\" onClick={(e) => this.signUp(e)}>\r\n                    SignUp\r\n                   </Button>\r\n                 </Grid>\r\n                 <Divider />\r\n                 <Grid item sm={12}>\r\n                   <div className=\"text-center\">\r\n                     Already Registered? <Button color=\"primary\"><Link to=\"/login\">Login</Link></Button>\r\n                   </div>\r\n                 </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n            </Col>\r\n            <Col lg={7} className=\"p-0\">\r\n              <div className=\"signup_img\">\r\n                <Image src= {sign_up_image} alt=\"signup page image\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}